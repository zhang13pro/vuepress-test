import{o as d,c as a,b as s,d as i,a as l}from"./app.60568e47.js";import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";const n={},o={"data-v-1605a430":""},c=s("h1",{"data-v-1605a430":"",class:"main-title"}," 17 | \u6765\u81EA 100 +\u9879\u76EE\u7ECF\u5386\u7684\u5E38\u89C1 TypeScript \u9519\u8BEF\u6C47\u603B\u5206\u6790 ",-1),p=s("div",{"data-v-1605a430":"",class:"main-tips"},[i(" 2021/06/29 "),s("span",{"data-v-1605a430":"",class:"auth"},"\u4E7E\u5143")],-1),t=s("div",{"data-v-1605a430":"",class:"media-player-wrap"},[s("div",{"data-v-6ecd2302":"","data-v-1605a430":""},[s("div",{"data-v-6ecd2302":"",class:"media-container"},[s("div",{"data-v-6ecd2302":"",class:"button-wrap inline-block"},[s("div",{"data-v-6ecd2302":"",class:"button-icon inline-block"})]),s("div",{"data-v-6ecd2302":"",class:"data-wrap inline-block"},[s("div",{"data-v-6ecd2302":"",class:"progress-bar"},[s("div",{class:"vue-slider vue-slider-ltr",style:{padding:"7px 0px",width:"auto",height:"4px"}},[s("div",{class:"vue-slider-rail",style:{height:"2px",background:"rgb(213, 218, 223)","border-radius":"1.5px"}},[s("div",{class:"vue-slider-process",style:{height:"100%",top:"0px",left:"0%",width:"0%","transition-property":"width, left","transition-duration":"0.5s",background:"rgb(252, 215, 102)"}}),s("div",{"aria-valuetext":"00:00/11:59",class:"vue-slider-dot vue-slider-dot-hover",role:"slider","aria-valuenow":"0","aria-valuemin":"0","aria-valuemax":"719","aria-orientation":"horizontal",tabindex:"0",style:{width:"14px",height:"14px",transform:"translate(-50%, -50%)",top:"50%",left:"0%",transition:"left 0.5s ease 0s"}},[s("div",{class:"vue-slider-dot-handle",style:{width:"16px",height:"16px",background:"rgb(252, 215, 102)","box-shadow":"none","margin-top":"-1px","z-index":"1"}}),s("div",{class:"vue-slider-dot-tooltip vue-slider-dot-tooltip-top"},[s("div",{class:"vue-slider-dot-tooltip-inner vue-slider-dot-tooltip-inner-top",style:{padding:"2px 12px","border-radius":"14px","font-size":"14px",color:"rgb(0, 0, 0)",background:"rgb(252, 215, 102)","min-width":"20px","border-color":"rgb(252, 215, 102)"}},[s("span",{class:"vue-slider-dot-tooltip-text"},"00:00/11:59")])])])])])]),s("div",{"data-v-6ecd2302":"",class:"detail-wrap"},[s("div",{"data-v-6ecd2302":"",class:"detail-one"},"31.25M"),s("div",{"data-v-6ecd2302":"",class:"detail-two"},"00:00/11:59")])]),s("div",{"data-v-6ecd2302":"",class:"division-line inline-block"}),s("div",{"data-v-6ecd2302":"",class:"viedo-wrap inline-block"},[s("div",{"data-v-6ecd2302":"",class:"viedo-icon"}),s("div",{"data-v-6ecd2302":"",class:"text"},"\u770B\u89C6\u9891")])])])],-1),r=l(`<div data-v-1605a430="" class="main-container"><div data-v-1605a430="" class="rich-text-wrap"><p data-nodeid="2306"> \u7ECF\u8FC7\u524D\u9762\u8BFE\u7A0B\u7684\u5B66\u4E60\uFF0C\u4F60\u5DF2\u7ECF\u638C\u63E1\u4E86 TypeScript \u7684\u57FA\u672C\u77E5\u8BC6\uFF0C\u5E76\u4E86\u89E3\u4E86\u5982\u4F55\u5229\u7528 TypeScript \u7684\u57FA\u672C\u77E5\u8BC6\u5B9E\u73B0\u4E00\u4E9B\u9AD8\u7EA7\u7C7B\u578B\u548C\u7279\u6027\u3002\u8FD9\u4E00\u8BB2\u6211\u5C06\u4ECB\u7ECD\u4E00\u4E9B\u5E73\u65F6\u5728\u5F00\u53D1\u8FC7\u7A0B\u4E2D\u5E38\u89C1\u4F46\u5728\u5B98\u65B9\u6587\u6863\u751A\u5C11\u63D0\u53CA\u7684 TypeScript \u7C7B\u578B\u9519\u8BEF\uFF0C\u5E76\u6559\u4F60\u5982\u4F55\u7ED9 TypeScript \u4EE3\u7801\u7F16\u5199\u5355\u5143\u6D4B\u8BD5\u3002 </p><h3 data-nodeid="2307">\u5E38\u89C1\u9519\u8BEF</h3><p data-nodeid="2308"> TypeScript \u9519\u8BEF\u4FE1\u606F\u7531\u9519\u8BEF\u7801\u548C\u8BE6\u7EC6\u4FE1\u606F\u7EC4\u6210\u3002\u5176\u4E2D\uFF0C\u9519\u8BEF\u7801\u662F\u4EE5\u201CTS\u201D\u5F00\u5934 + \u6570\u5B57\uFF08\u4E00\u822C\u662F 4 \u4F4D\u6570\u5B57\uFF09\u7ED3\u5C3E\u8FD9\u6837\u7684\u683C\u5F0F\u7EC4\u6210\u7684\u5B57\u7B26\u4E32\uFF0C\u7528\u6765\u4F5C\u4E3A\u7279\u5B9A\u7C7B\u578B\u9519\u8BEF\u7684\u4E13\u5C5E\u4EE3\u53F7\u3002\u5982\u679C\u4F60\u60F3\u67E5\u770B\u6240\u6709\u7684\u9519\u8BEF\u4FE1\u606F\u548C\u9519\u8BEF\u7801\uFF0C\u53EF\u4EE5\u70B9\u51FB<a href="https://github.com/Microsoft/TypeScript/blob/master/src/compiler/diagnosticMessages.json" data-nodeid="2391">TypeScript \u6E90\u7801\u4ED3\u5E93</a>\u3002\u5F53\u7136\uFF0C\u968F\u7740 TypeScript \u7248\u672C\u7684\u66F4\u65B0\uFF0C\u4E5F\u4F1A\u9010\u6E10\u589E\u52A0\u66F4\u591A\u65B0\u7684\u7C7B\u578B\u9519\u8BEF\u3002 </p><p data-nodeid="2309"> \u4E0B\u9762\u6211\u4EEC\u770B\u4E00\u4E0B\u90A3\u4E9B\u5E38\u89C1\u4F46\u5728\u5B98\u65B9\u6587\u6863\u751A\u5C11\u63D0\u53CA\u7684\u7C7B\u578B\u9519\u8BEF\u3002 </p><h4 data-nodeid="2310">TS2456</h4><p data-nodeid="2311"> \u9996\u5148\u662F\u7531\u4E8E\u7C7B\u578B\u522B\u540D\u5FAA\u73AF\u5F15\u7528\u4E86\u81EA\u8EAB\u9020\u6210\u7684 TS2456 \u7C7B\u578B\u9519\u8BEF\uFF0C\u5982\u4E0B\u793A\u4F8B\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-comment">// TS2456: Type alias &#39;T&#39; circularly references itself.</span>
</div></li><li><div class="code-word"><span class="hljs-keyword">type</span> T = Readonly&lt;T&gt;;
</div></li></ol></code></pre></div><p data-nodeid="3766" class=""> \u5728\u4E0A\u8FF0\u793A\u4F8B\u4E2D\uFF0C\u5BF9\u4E8E T \u8FD9\u4E2A\u7C7B\u578B\u522B\u540D\uFF0C\u5982\u679C TypeScript \u7F16\u8BD1\u5668\u60F3\u77E5\u9053 T \u7C7B\u578B\u662F\u4EC0\u4E48\uFF0C\u5C31\u9700\u8981\u5C55\u5F00\u7C7B\u578B\u522B\u540D\u8D4B\u503C\u7684 Readonly<code data-backticks="1" data-nodeid="3768">&lt;T&gt;</code>\u3002\u800C\u4E3A\u4E86\u786E\u5B9A Readonly<code data-backticks="1" data-nodeid="3770">&lt;T&gt;</code> \u7684\u7C7B\u578B\uFF0CTypeScript \u7F16\u8BD1\u5668\u9700\u8981\u7EE7\u7EED\u5224\u65AD\u7C7B\u578B\u5165\u53C2 T \u7684\u7C7B\u578B\uFF0C\u8FD9\u5C31\u5F62\u6210\u4E86\u4E00\u4E2A\u5FAA\u73AF\u5F15\u7528\u3002\u7C7B\u4F3C\u51FD\u6570\u5FAA\u73AF\u8C03\u7528\u81EA\u5DF1\uFF0C\u5982\u679C\u6CA1\u6709\u6B63\u786E\u7684\u7EC8\u6B62\u6761\u4EF6\uFF0C\u5C31\u4F1A\u4E00\u76F4\u5904\u4E8E\u65E0\u9650\u5FAA\u73AF\u7684\u72B6\u6001\u3002 </p><p data-nodeid="2314"> \u5F53\u7136\uFF0C\u5982\u679C\u5728\u7C7B\u578B\u522B\u540D\u7684\u5B9A\u4E49\u4E2D\u8BBE\u5B9A\u4E86\u6B63\u786E\u7684\u7EC8\u6B62\u6761\u4EF6\uFF0C\u6211\u4EEC\u5C31\u53EF\u4EE5\u4F7F\u7528\u5FAA\u73AF\u5F15\u7528\u7684\u7279\u6B8A\u6570\u636E\u7ED3\u6784\uFF0C\u5982\u4E0B\u793A\u4F8B\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="java"><ol><li><div class="code-word">type JSON = string | number | <span class="hljs-keyword">boolean</span> | <span class="hljs-keyword">null</span> | JSON[] | { [key: string]: JSON };
</div></li><li><div class="code-word">\u200B
</div></li><li><div class="code-word"><span class="hljs-keyword">const</span> json1: JSON = <span class="hljs-string">&#39;json&#39;</span>;
</div></li><li><div class="code-word"><span class="hljs-keyword">const</span> json2: JSON = [<span class="hljs-string">&#39;str&#39;</span>, <span class="hljs-number">1</span>, <span class="hljs-keyword">true</span>, <span class="hljs-keyword">null</span>];
</div></li><li><div class="code-word"><span class="hljs-keyword">const</span> json3: JSON = { key: <span class="hljs-string">&#39;value&#39;</span> };
</div></li></ol></code></pre></div><p data-nodeid="2316"> \u5728\u4E0A\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0C\u6211\u4EEC\u5B9A\u4E49\u4E86 JSON \u6570\u636E\u7ED3\u6784\u7684 TypeScript \u7C7B\u578B\u3002\u5176\u4E2D\uFF0C\u5C31\u6709\u5BF9\u7C7B\u578B\u522B\u540D JSON \u81EA\u8EAB\u7684\u5FAA\u73AF\u5F15\u7528\uFF0C\u5373\u793A\u4F8B\u4E2D\u51FA\u73B0\u7684 JSON[] | { [key: string]: JSON }\u3002\u4E0E\u7B2C 1 \u4E2A\u4F8B\u5B50\u4E0D\u540C\u7684\u662F\uFF0C\u8FD9\u91CC\u7684\u5F15\u7528\u6700\u7EC8\u53EF\u4EE5\u5177\u4F53\u5C55\u5F00\u4E3A string | number | boolean | null \u7C7B\u578B\uFF0C\u6240\u4EE5\u4E0D\u4F1A\u51FA\u73B0\u65E0\u9650\u5FAA\u73AF\u7684\u60C5\u51B5\u3002 </p><blockquote data-nodeid="2317"><p data-nodeid="2318"><strong data-nodeid="2413">\u6CE8\u610F\uFF1A\u7B2C 2 \u4E2A\u4F8B\u5B50\u53EA\u80FD\u5728 TypeScript 3.7 \u4EE5\u4E0A\u7684\u7248\u672C\u4F7F\u7528\uFF0C\u5982\u679C\u7248\u672C\u5C0F\u4E8E 3.7 \u4ECD\u4F1A\u63D0\u793A TS2456 \u9519\u8BEF\u3002</strong></p></blockquote><h4 data-nodeid="2319">TS2554</h4><p data-nodeid="2320"> \u53E6\u5916\uFF0C\u6211\u4EEC\u9700\u8981\u4ECB\u7ECD\u7684\u662F\u6BD4\u8F83\u5E38\u89C1\u7684\u4E00\u4E2A TS2554 \u9519\u8BEF\uFF0C\u5B83\u662F\u7531\u4E8E\u5F62\u53C2\u548C\u5B9E\u53C2\u4E2A\u6570\u4E0D\u5339\u914D\u9020\u6210\u7684\uFF0C\u5982\u4E0B\u793A\u4F8B\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="java"><ol><li><div class="code-word"><span class="hljs-function">function <span class="hljs-title">toString</span><span class="hljs-params">(x: number | undefined)</span>: string </span>{
</div></li><li><div class="code-word"> \xA0<span class="hljs-keyword">if</span> (x === undefined) {
</div></li><li><div class="code-word"> \xA0 \xA0<span class="hljs-keyword">return</span> <span class="hljs-string">&#39;&#39;</span>;
</div></li><li><div class="code-word">  }
</div></li><li><div class="code-word"> \xA0<span class="hljs-keyword">return</span> x.toString();
</div></li><li><div class="code-word">}
</div></li><li><div class="code-word">\u200B
</div></li><li><div class="code-word">toString(); <span class="hljs-comment">// TS2554: Expected 1 arguments, but got 0.</span>
</div></li><li><div class="code-word">toString(undefined);
</div></li><li><div class="code-word">toString(<span class="hljs-number">1</span>);
</div></li></ol></code></pre></div><p data-nodeid="2322"> \u4E0A\u9762\u4F8B\u5B50\u62A5\u9519\u7684\u539F\u56E0\u662F\uFF0C\u5728 TypeScript \u4E2D\uFF0Cundefined \u662F\u4E00\u4E2A\u7279\u6B8A\u7684\u7C7B\u578B\u3002\u7531\u4E8E\u7C7B\u578B\u4E3A undefined\uFF0C\u5E76\u4E0D\u4EE3\u8868\u53EF\u7F3A\u7701\uFF0C\u56E0\u6B64\u793A\u4F8B\u4E2D\u7684\u7B2C 8 \u884C\u63D0\u793A\u4E86 TS2554 \u9519\u8BEF\u3002 </p><p data-nodeid="2323"> \u800C\u53EF\u9009\u53C2\u6570\u662F\u4E00\u79CD\u7279\u6B8A\u7684\u7C7B\u578B\uFF0C\u867D\u7136\u5728\u4EE3\u7801\u6267\u884C\u5C42\u9762\u4E0A\uFF0C\u6700\u7EC8\u53C2\u6570\u7C7B\u578B\u662F undefined \u548C\u53C2\u6570\u53EF\u9009\u7684\u51FD\u6570\uFF0C\u63A5\u6536\u5230\u7684\u5165\u53C2\u7684\u503C\u90FD\u53EF\u4EE5\u662F undefined\uFF0C\u4F46\u662F\u5728 TypeScript \u7684\u4EE3\u7801\u68C0\u67E5\u4E2D\uFF0Cundefined \u7C7B\u578B\u7684\u53C2\u6570\u548C\u53EF\u9009\u53C2\u6570\u90FD\u4F1A\u88AB\u5F53\u4F5C\u4E0D\u540C\u7684\u7C7B\u578B\u6765\u5BF9\u5F85\uFF0C\u5982\u4E0B\u793A\u4F8B\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="java"><ol><li><div class="code-word"><span class="hljs-function">function <span class="hljs-title">toString</span><span class="hljs-params">(x?: number)</span>: string </span>{
</div></li><li><div class="code-word"> \xA0<span class="hljs-keyword">if</span> (x === undefined) {
</div></li><li><div class="code-word"> \xA0 \xA0<span class="hljs-keyword">return</span> <span class="hljs-string">&#39;&#39;</span>;
</div></li><li><div class="code-word">  }
</div></li><li><div class="code-word"> \xA0<span class="hljs-keyword">return</span> x.toString();
</div></li><li><div class="code-word">}
</div></li><li><div class="code-word">\u200B
</div></li><li><div class="code-word"><span class="hljs-function">function <span class="hljs-title">toString</span><span class="hljs-params">(x = <span class="hljs-string">&#39;&#39;</span>)</span>: string </span>{
</div></li><li><div class="code-word"> \xA0<span class="hljs-keyword">return</span> x.toString();
</div></li><li><div class="code-word">}
</div></li></ol></code></pre></div><p data-nodeid="2325"> \u56E0\u6B64\uFF0C\u5982\u679C\u5728\u7F16\u7A0B\u7684\u8FC7\u7A0B\u4E2D\u51FD\u6570\u7684\u53C2\u6570\u662F\u53EF\u9009\u7684\uFF0C\u6211\u4EEC\u6700\u597D\u4F7F\u7528\u53EF\u9009\u53C2\u6570\u7684\u8BED\u6CD5\uFF0C\u8FD9\u6837\u5C31\u53EF\u4EE5\u907F\u514D\u624B\u52A8\u4F20\u5165 undefined \u7684\u503C\uFF0C\u5E76\u987A\u5229\u901A\u8FC7 TypeScript \u7684\u68C0\u67E5\u3002 </p><p data-nodeid="4186" class="te-preview-highlight"> \u503C\u5F97\u4E00\u63D0\u7684\u662F\uFF0C\u5728 TypeScript 4.1 \u5927\u7248\u672C\u7684\u66F4\u65B0\u4E2D\uFF0CPromise \u6784\u9020\u7684 resolve \u53C2\u6570\u4E0D\u518D\u662F\u9ED8\u8BA4\u53EF\u9009\u7684\u4E86\uFF0C\u6240\u4EE5\u5982\u4EE5\u4E0B\u793A\u4F8B\u7B2C 2 \u884C\u6240\u793A\uFF0C\u5728\u672A\u6307\u5B9A\u5165\u53C2\u7684\u60C5\u51B5\u4E0B\uFF0C\u8C03\u7528 resolve \u4F1A\u63D0\u793A\u7C7B\u578B\u9519\u8BEF <strong data-nodeid="4192">\uFF08\u6CE8\u610F\uFF1A\u4E3A\u4E86\u4EE5\u793A\u533A\u5206\uFF0C\u5B98\u65B9\u4F7F\u7528\u4E86 TS2794 \u9519\u8BEF\u7801\u6307\u4EE3\u8FD9\u4E2A\u9519\u8BEF\uFF09</strong>\u3002 </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="java"><ol><li><div class="code-word"><span class="hljs-keyword">new</span> Promise((resolve) =&gt; {
</div></li><li><div class="code-word"> \xA0resolve(); <span class="hljs-comment">// TS2794: Expected 1 arguments, but got 0. Did you forget to include &#39;void&#39; in your type argument to &#39;Promise&#39;? </span>
</div></li><li><div class="code-word">});
</div></li></ol></code></pre></div><p data-nodeid="2328"> \u5982\u679C\u6211\u4EEC\u4E0D\u9700\u8981\u53C2\u6570\uFF0C\u53EA\u9700\u8981\u7ED9 Promise \u7684\u6CDB\u578B\u53C2\u6570\u4F20\u5165 void \u5373\u53EF\uFF0C\u5982\u4E0B\u793A\u4F8B\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="java"><ol><li><div class="code-word"><span class="hljs-keyword">new</span> Promise&lt;<span class="hljs-keyword">void</span>&gt;((resolve) =&gt; {
</div></li><li><div class="code-word"> \xA0resolve();
</div></li><li><div class="code-word">});
</div></li></ol></code></pre></div><p data-nodeid="2330"> \u5728\u4E0A\u8FF0\u793A\u4F8B\u4E2D\uFF0C\u56E0\u4E3A\u6211\u4EEC\u5728\u7B2C 1 \u884C\u7ED9\u6CDB\u578B\u7C7B Promise \u6307\u5B9A\u4E86 void \u7C7B\u578B\u5165\u53C2\uFF08\u6CE8\u610F\u662F void \u800C\u4E0D\u662F undefined\uFF09\uFF0C\u6240\u4EE5\u5728\u7B2C 3 \u884C\u8C03\u7528 resolve \u65F6\u65E0\u987B\u6307\u5B9A\u5165\u53C2\u3002 </p><h4 data-nodeid="2331">TS1169</h4><p data-nodeid="2332"> \u63A5\u4E0B\u6765\u662F TS1169 \u7C7B\u578B\u9519\u8BEF\uFF0C\u5B83\u662F\u5728\u63A5\u53E3\u7C7B\u578B\u5B9A\u4E49\u4E2D\u7531\u4E8E\u4F7F\u7528\u4E86\u975E\u5B57\u9762\u91CF\u6216\u8005\u975E\u552F\u4E00 symbol \u7C7B\u578B\u4F5C\u4E3A\u5C5E\u6027\u540D\u9020\u6210\u7684\uFF0C\u5982\u4E0B\u793A\u4F8B\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="java"><ol><li><div class="code-word"><span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">Obj</span> </span>{
</div></li><li><div class="code-word">  [key in <span class="hljs-string">&#39;id&#39;</span> | <span class="hljs-string">&#39;name&#39;</span>]: any; <span class="hljs-comment">// TS1169: A computed property name in an interface must refer to an expression whose type is a literal type or a &#39;unique symbol&#39; type.</span>
</div></li><li><div class="code-word">};
</div></li></ol></code></pre></div><p data-nodeid="2334"> \u5728\u4E0A\u8FF0\u793A\u4F8B\u4E2D\uFF0C\u56E0\u4E3Ainterface \u7C7B\u578B\u7684\u5C5E\u6027\u5FC5\u987B\u662F\u5B57\u9762\u91CF\u7C7B\u578B(string\u3001number) \u6216\u8005\u662F unique symbol \u7C7B\u578B\uFF0C\u6240\u4EE5\u5728\u7B2C 2 \u884C\u63D0\u793A\u4E86 TS1169 \u9519\u8BEF\u3002 </p><p data-nodeid="2335">\u5173\u4E8E\u63A5\u53E3\u7C7B\u578B\u652F\u6301\u7684\u7528\u6CD5\u5982\u4E0B\u793A\u4F8B\uFF1A</p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="java"><ol><li><div class="code-word"><span class="hljs-keyword">const</span> symbol: unique symbol = Symbol();
</div></li><li><div class="code-word">\u200B
</div></li><li><div class="code-word"><span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">Obj</span> </span>{
</div></li><li><div class="code-word">  [key: string]: any;
</div></li><li><div class="code-word">  [key: number]: any;
</div></li><li><div class="code-word">  [symbol]: any;
</div></li><li><div class="code-word">}
</div></li></ol></code></pre></div><p data-nodeid="2337"> \u5728\u4E0A\u8FF0\u793A\u4F8B\u4E2D\u7684\u7B2C 4~6 \u884C\uFF0C\u6211\u4EEC\u4F7F\u7528\u4E86 string\u3001number \u548C symbol \u4F5C\u4E3A\u63A5\u53E3\u5C5E\u6027\uFF0C\u6240\u4EE5\u4E0D\u4F1A\u63D0\u793A\u7C7B\u578B\u9519\u8BEF\u3002 </p><p data-nodeid="2338"> \u4F46\u662F\uFF0C\u5728 type \u5173\u952E\u5B57\u58F0\u660E\u7684\u7C7B\u578B\u522B\u540D\u4E2D\uFF0C\u6211\u4EEC\u5374\u53EF\u4EE5\u4F7F\u7528\u6620\u5C04\u7C7B\u578B\u5B9A\u4E49\u5C5E\u6027\uFF0C\u5982\u4E0B\u793A\u4F8B\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="java"><ol><li><div class="code-word">type Obj = {
</div></li><li><div class="code-word">  [key in <span class="hljs-string">&#39;id&#39;</span> | <span class="hljs-string">&#39;name&#39;</span>]: any;
</div></li><li><div class="code-word">};
</div></li></ol></code></pre></div><p data-nodeid="2340"> \u5728\u793A\u4F8B\u4E2D\u7684\u7B2C 2 \u884C\uFF0C\u6211\u4EEC\u5B9A\u4E49\u4E86\u4E00\u4E2A\u5305\u542B id \u548C name \u5C5E\u6027\u7684\u7C7B\u578B\u522B\u540D Obj\u3002 </p><h4 data-nodeid="2341">TS2345</h4><p data-nodeid="2342"> \u63A5\u4E0B\u6765\u6211\u4EEC\u4ECB\u7ECD\u4E00\u4E0B\u975E\u5E38\u5E38\u89C1\u7684 TS2345 \u7C7B\u578B\u9519\u8BEF\uFF0C\u5B83\u662F\u5728\u4F20\u53C2\u65F6\u7531\u4E8E\u7C7B\u578B\u4E0D\u517C\u5BB9\u9020\u6210\u7684\uFF0C\u5982\u4E0B\u793A\u4F8B\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="java"><ol><li><div class="code-word"><span class="hljs-keyword">enum</span> A {
</div></li><li><div class="code-word"> \xA0x = <span class="hljs-string">&#39;x&#39;</span>,
</div></li><li><div class="code-word"> \xA0y = <span class="hljs-string">&#39;y&#39;</span>,
</div></li><li><div class="code-word"> \xA0z = <span class="hljs-string">&#39;z&#39;</span>,
</div></li><li><div class="code-word">}
</div></li><li><div class="code-word"><span class="hljs-keyword">enum</span> B {
</div></li><li><div class="code-word"> \xA0x = <span class="hljs-string">&#39;x&#39;</span>,
</div></li><li><div class="code-word"> \xA0y = <span class="hljs-string">&#39;y&#39;</span>,
</div></li><li><div class="code-word"> \xA0z = <span class="hljs-string">&#39;z&#39;</span>,
</div></li><li><div class="code-word">}
</div></li><li><div class="code-word">\u200B
</div></li><li><div class="code-word"><span class="hljs-function">function <span class="hljs-title">fn</span><span class="hljs-params">(val: A)</span> </span>{}
</div></li><li><div class="code-word">fn(B.x); <span class="hljs-comment">// TS2345: Argument of type &#39;B.x&#39; is not assignable to parameter of type &#39;A&#39;.</span>
</div></li></ol></code></pre></div><p data-nodeid="2344"> \u5982\u4E0A\u9762\u7684\u4F8B\u5B50\u6240\u793A\uFF0C\u51FD\u6570 fn \u53C2\u6570\u7684 val \u7C7B\u578B\u662F\u679A\u4E3E A\uFF0C\u5728 13 \u884C\u6211\u4EEC\u4F20\u5165\u4E86\u4E0E\u679A\u4E3E A \u7C7B\u4F3C\u7684\u679A\u4E3E B \u7684\u503C\uFF0C\u6B64\u65F6 TypeScript \u63D0\u793A\u4E86\u7C7B\u578B\u4E0D\u5339\u914D\u7684\u9519\u8BEF\u3002\u8FD9\u662F\u56E0\u4E3A\u679A\u4E3E\u662F\u5728\u8FD0\u884C\u65F6\u771F\u6B63\u5B58\u5728\u7684\u5BF9\u8C61\uFF0C\u56E0\u6B64 TypeScript \u5E76\u4E0D\u4F1A\u5224\u65AD\u4E24\u4E2A\u679A\u4E3E\u662F\u5426\u53EF\u4EE5\u4E92\u76F8\u517C\u5BB9\u3002 </p><p data-nodeid="2345"> \u6B64\u65F6\u89E3\u51B3\u8FD9\u4E2A\u9519\u8BEF\u7684\u65B9\u5F0F\u4E5F\u5F88\u7B80\u5355\uFF0C\u6211\u4EEC\u53EA\u9700\u8981\u8BA9\u8FD9\u4E24\u4E2A\u679A\u4E3E\u7C7B\u578B\u4E92\u76F8\u517C\u5BB9\u5C31\u884C\uFF0C\u6BD4\u5982\u4F7F\u7528\u7C7B\u578B\u65AD\u8A00\u7ED5\u8FC7 TypeScript \u7684\u7C7B\u578B\u68C0\u67E5\uFF0C\u5982\u4E0B\u793A\u4F8B\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="java"><ol><li><div class="code-word"><span class="hljs-function">function <span class="hljs-title">fn</span><span class="hljs-params">(val: A)</span> </span>{}
</div></li><li><div class="code-word">fn((B.x as unknown) as A);
</div></li></ol></code></pre></div><p data-nodeid="2347"> \u5728\u793A\u4F8B\u4E2D\u7684\u7B2C 2 \u884C\uFF0C\u6211\u4EEC\u4F7F\u7528\u4E86 as \u53CC\u91CD\u7C7B\u578B\u65AD\u8A00\u8BA9\u679A\u4E3E B.x \u517C\u5BB9\u679A\u4E3E\u7C7B\u578B A\uFF0C\u4ECE\u800C\u4E0D\u518D\u63D0\u793A\u7C7B\u578B\u9519\u8BEF\u3002 </p><h4 data-nodeid="2348">TS2589</h4><p data-nodeid="2349"> \u63A5\u4E0B\u6765\u6211\u4EEC\u4ECB\u7ECD TS2589 \u7C7B\u578B\u9519\u8BEF\uFF0C\u5B83\u662F\u7531\u6CDB\u578B\u5B9E\u4F8B\u5316\u9012\u5F52\u5D4C\u5957\u8FC7\u6DF1\u9020\u6210\u7684\uFF0C\u5982\u4E0B\u793A\u4F8B\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="java"><ol><li><div class="code-word">type RepeatX&lt;N extends number, T extends any[] = []&gt; = T[<span class="hljs-string">&#39;length&#39;</span>] extends N
</div></li><li><div class="code-word"> \xA0? T
</div></li><li><div class="code-word">  : RepeatX&lt;N, [...T, <span class="hljs-string">&#39;X&#39;</span>]&gt;;
</div></li><li><div class="code-word">type T1 = RepeatX&lt;<span class="hljs-number">5</span>&gt;; <span class="hljs-comment">// =&gt; [&quot;X&quot;, &quot;X&quot;, &quot;X&quot;, &quot;X&quot;, &quot;X&quot;]</span>
</div></li><li><div class="code-word"><span class="hljs-comment">// TS2589: Type instantiation is excessively deep and possibly infinite.</span>
</div></li><li><div class="code-word">type T2 = RepeatX&lt;<span class="hljs-number">50</span>&gt;; <span class="hljs-comment">// =&gt; any</span>
</div></li></ol></code></pre></div><p data-nodeid="2351"> \u5728\u4E0A\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0C\u56E0\u4E3A\u7B2C 1 \u884C\u7684\u6CDB\u578B RepeatX \u63A5\u6536\u4E86\u4E00\u4E2A\u6570\u5B57\u7C7B\u578B\u5165\u53C2 N\uFF0C\u5E76\u8FD4\u56DE\u4E86\u4E00\u4E2A\u957F\u5EA6\u4E3A N\u3001\u5143\u7D20\u90FD\u662F &#39;X&#39; \u7684\u6570\u7EC4\u7C7B\u578B\uFF0C\u6240\u4EE5\u7B2C 4 \u884C\u7684\u7C7B\u578B T1 \u5305\u542B\u4E86 5 \u4E2A &quot;X&quot; \u7684\u6570\u7EC4\u7C7B\u578B\uFF1B\u4F46\u662F\u7B2C 6 \u884C\u7684\u7C7B\u578B T2 \u7684\u7C7B\u578B\u5374\u662F any\uFF0C\u5E76\u4E14\u63D0\u793A\u4E86 TS2589 \u7C7B\u578B\u9519\u8BEF\u3002\u8FD9\u662F\u56E0\u4E3A TypeScript \u5728\u5904\u7406\u9012\u5F52\u7C7B\u578B\u7684\u65F6\u5019\uFF0C\u6700\u591A\u5B9E\u4F8B\u5316 50 \u5C42\uFF0C\u5982\u679C\u8D85\u51FA\u4E86\u9012\u5F52\u5C42\u6570\u7684\u9650\u5236\uFF0CTypeScript \u4FBF\u4E0D\u4F1A\u7EE7\u7EED\u5B9E\u4F8B\u5316\uFF0C\u5E76\u4E14\u7C7B\u578B\u4F1A\u53D8\u4E3A top \u7C7B\u578B any\u3002 </p><p data-nodeid="2352"> \u5BF9\u4E8E\u4E0A\u9762\u7684\u9519\u8BEF\uFF0C\u6211\u4EEC\u4F7F\u7528 @ts-ignore \u6CE8\u91CA\u5FFD\u7565\u5373\u53EF\u3002 </p><h4 data-nodeid="2353">TS2322</h4><p data-nodeid="2354"> \u63A5\u4E0B\u6765\u9700\u8981\u4ECB\u7ECD\u7684\u662F\u4E00\u4E2A\u5E38\u89C1\u7684\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u7C7B\u578B\u7684 TS2322 \u9519\u8BEF\uFF0C\u5982\u4E0B\u793A\u4F8B\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-keyword">interface</span> CSSProperties {
</div></li><li><div class="code-word">  display: <span class="hljs-string">&#39;block&#39;</span> | <span class="hljs-string">&#39;flex&#39;</span> | <span class="hljs-string">&#39;grid&#39;</span>;
</div></li><li><div class="code-word">}
</div></li><li><div class="code-word"><span class="hljs-keyword">const</span> style = {
</div></li><li><div class="code-word">  display: <span class="hljs-string">&#39;flex&#39;</span>,
</div></li><li><div class="code-word">};
</div></li><li><div class="code-word"><span class="hljs-comment">// TS2322: Type &#39;{ display: string; }&#39; is not assignable to type &#39;CSSProperties&#39;.</span>
</div></li><li><div class="code-word"><span class="hljs-comment">//  Types of property &#39;display&#39; are incompatible.</span>
</div></li><li><div class="code-word"><span class="hljs-comment">//   Type &#39;string&#39; is not assignable to type &#39;&quot;block&quot; | &quot;flex&quot; | &quot;grid&quot;&#39;.</span>
</div></li><li><div class="code-word"><span class="hljs-keyword">const</span> cssStyle: CSSProperties = style;
</div></li></ol></code></pre></div><p data-nodeid="2356"> \u5728\u4E0A\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0CCSSProperties \u7684 display \u5C5E\u6027\u7684\u7C7B\u578B\u662F\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u7C7B\u578B &#39;block&#39; | &#39;flex&#39; | &#39;grid&#39;\uFF0C\u867D\u7136\u53D8\u91CF style \u7684 display \u5C5E\u6027\u770B\u8D77\u6765\u4E0E CSSProperties \u7C7B\u578B\u5B8C\u5168\u517C\u5BB9\uFF0C\u4F46\u662F TypeScript \u63D0\u793A\u4E86 TS2322 \u7C7B\u578B\u4E0D\u517C\u5BB9\u7684\u9519\u8BEF\u3002\u8FD9\u662F\u56E0\u4E3A\u53D8\u91CF style \u7684\u7C7B\u578B\u88AB\u81EA\u52A8\u63A8\u65AD\u6210\u4E86 { display: string }\uFF0Cstring \u7C7B\u578B\u81EA\u7136\u65E0\u6CD5\u517C\u5BB9\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u7C7B\u578B &#39;block&#39; | &#39;flex&#39; | &#39;grid&#39;\uFF0C\u6240\u4EE5\u53D8\u91CF style \u4E0D\u80FD\u8D4B\u503C\u7ED9 cssStyle\u3002 </p><p data-nodeid="2357">\u5982\u4E0B\u6211\u63D0\u4F9B\u4E86\u4E24\u79CD\u89E3\u51B3\u8FD9\u4E2A\u9519\u8BEF\u7684\u65B9\u6CD5\u3002</p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-comment">// \u65B9\u6CD5 1</span>
</div></li><li><div class="code-word"><span class="hljs-keyword">const</span> style: CSSProperties = {
</div></li><li><div class="code-word">  display: <span class="hljs-string">&#39;flex&#39;</span>,
</div></li><li><div class="code-word">};
</div></li><li><div class="code-word"><span class="hljs-comment">// \u65B9\u6CD5 2</span>
</div></li><li><div class="code-word"><span class="hljs-keyword">const</span> style = {
</div></li><li><div class="code-word">  display: <span class="hljs-string">&#39;flex&#39;</span> <span class="hljs-keyword">as</span> <span class="hljs-string">&#39;flex&#39;</span>,
</div></li><li><div class="code-word">};
</div></li><li><div class="code-word"><span class="hljs-comment">// typeof style = { display: &#39;flex&#39; }</span>
</div></li></ol></code></pre></div><p data-nodeid="2359"> \u5728\u65B9\u6CD5 1 \u4E2D\uFF0C\u6211\u4EEC\u663E\u5F0F\u58F0\u660E\u4E86 style \u7C7B\u578B\u4E3A CSSProperties\uFF0C\u56E0\u6B64\u53D8\u91CF style \u7C7B\u578B\u4E0E cssStyle \u671F\u671B\u7684\u7C7B\u578B\u517C\u5BB9\u3002\u5728\u65B9\u6CD5 2 \u4E2D\uFF0C\u6211\u4EEC\u4F7F\u7528\u4E86\u7C7B\u578B\u65AD\u8A00\u58F0\u660E display \u5C5E\u6027\u7684\u503C\u4E3A\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u7C7B\u578B &#39;flex&#39;\uFF0C\u56E0\u6B64 style \u7684\u7C7B\u578B\u88AB\u81EA\u52A8\u63A8\u65AD\u6210\u4E86 { display: &#39;flex&#39; }\uFF0C\u4E0E CSSProperties \u7C7B\u578B\u517C\u5BB9\u3002 </p><h4 data-nodeid="2360">TS2352</h4><p data-nodeid="2361"> \u63A5\u4E0B\u6765\u6211\u8981\u4ECB\u7ECD\u7684\u662F\u4E00\u4E2A TypeScript \u7C7B\u578B\u6536\u7F29\u7279\u6027\u7684 TS2352 \u7C7B\u578B\u9519\u8BEF\uFF0C\u5982\u4E0B\u793A\u4F8B\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-keyword">let</span> x: <span class="hljs-built_in">string</span> | <span class="hljs-literal">undefined</span>;
</div></li><li><div class="code-word"><span class="hljs-keyword">if</span> (x) {
</div></li><li><div class="code-word">  x.trim();
</div></li><li><div class="code-word">  setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {
</div></li><li><div class="code-word">    x.trim(); <span class="hljs-comment">// TS2532: Object is possibly &#39;undefined&#39;.</span>
</div></li><li><div class="code-word">  });
</div></li><li><div class="code-word">}
</div></li><li><div class="code-word"><span class="hljs-keyword">class</span> Person {
</div></li><li><div class="code-word">  greet() {}
</div></li><li><div class="code-word">}
</div></li><li><div class="code-word"><span class="hljs-keyword">let</span> person: Person | <span class="hljs-built_in">string</span>;
</div></li><li><div class="code-word"><span class="hljs-keyword">if</span> (person <span class="hljs-keyword">instanceof</span> Person) {
</div></li><li><div class="code-word">  person.greet();
</div></li><li><div class="code-word">  <span class="hljs-keyword">const</span> innerFn = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {
</div></li><li><div class="code-word">    person.greet(); <span class="hljs-comment">// TS2532: Object is possibly &#39;undefined&#39;.</span>
</div></li><li><div class="code-word">  };
</div></li><li><div class="code-word">}
</div></li></ol></code></pre></div><p data-nodeid="2363"> \u5728\u4E0A\u8FF0\u793A\u4F8B\u4E2D\u7684\u7B2C 1 \u884C\uFF0C\u53D8\u91CF x \u7684\u7C7B\u578B\u662F sting | undefined\u3002\u5728\u7B2C 3 \u884C\u7684 if \u8BED\u53E5\u4E2D\uFF0C\u53D8\u91CF x \u7684\u7C7B\u578B\u6309\u7167\u4E4B\u524D\u8BB2\u7684\u7C7B\u578B\u6536\u7F29\u7279\u6027\u5E94\u8BE5\u662F string\uFF0C\u53EF\u4EE5\u770B\u5230\u7B2C 4 \u884C\u7684\u4EE3\u7801\u53EF\u4EE5\u901A\u8FC7\u7C7B\u578B\u68C0\u67E5\uFF0C\u800C\u7B2C 6 \u884C\u7684\u4EE3\u7801\u62A5\u9519 x \u7C7B\u578B\u53EF\u80FD\u662F undefined\uFF08\u56E0\u4E3A setTimeout \u7684\u7C7B\u578B\u5B88\u536B\u5931\u6548\uFF0C\u6240\u4EE5 x \u7684\u7C7B\u578B\u4E0D\u4F1A\u7F29\u5C0F\u4E3A string\uFF09\u3002 </p><p data-nodeid="2364"> \u540C\u6837\uFF0C\u5BF9\u4E8E\u7B2C 10 \u884C\u7684\u53D8\u91CF person \uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528 instanceof \u5C06\u5B83\u7684\u7C7B\u578B\u6536\u7F29\u4E3A Person\uFF0C\u56E0\u6B64\u7B2C 16 \u884C\u7684\u4EE3\u7801\u901A\u8FC7\u4E86\u7C7B\u578B\u68C0\u67E5\uFF0C\u800C\u7B2C 18 \u884C\u5219\u63D0\u793A\u4E86 TS2352 \u9519\u8BEF\u3002\u8FD9\u662F\u56E0\u4E3A\u51FD\u6570\u4E2D\u5BF9\u6355\u83B7\u7684\u53D8\u91CF\u4E0D\u4F1A\u4F7F\u7528\u7C7B\u578B\u6536\u7F29\u7684\u7ED3\u679C\uFF0C\u56E0\u4E3A\u7F16\u8BD1\u5668\u4E0D\u77E5\u9053\u56DE\u8C03\u51FD\u6570\u4EC0\u4E48\u65F6\u5019\u88AB\u6267\u884C\uFF0C\u4E5F\u5C31\u65E0\u6CD5\u4F7F\u7528\u4E4B\u524D\u7C7B\u578B\u6536\u7F29\u7684\u7ED3\u679C\u3002 </p><p data-nodeid="2365"> \u9488\u5BF9\u8FD9\u79CD\u9519\u8BEF\u7684\u5904\u7406\u65B9\u5F0F\u4E5F\u5F88\u7B80\u5355\uFF0C\u5C06\u7C7B\u578B\u6536\u7F29\u7684\u4EE3\u7801\u653E\u5165\u51FD\u6570\u4F53\u5185\u90E8\u5373\u53EF\uFF0C\u5982\u4E0B\u793A\u4F8B\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-keyword">let</span> x: <span class="hljs-built_in">string</span> | <span class="hljs-literal">undefined</span>;
</div></li><li><div class="code-word">setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {
</div></li><li><div class="code-word">  <span class="hljs-keyword">if</span> (x) {
</div></li><li><div class="code-word">    x.trim(); <span class="hljs-comment">// OK</span>
</div></li><li><div class="code-word">  }
</div></li><li><div class="code-word">});
</div></li><li><div class="code-word"><span class="hljs-keyword">class</span> Person {
</div></li><li><div class="code-word">  greet() {}
</div></li><li><div class="code-word">}
</div></li><li><div class="code-word"><span class="hljs-keyword">let</span> person: Person | <span class="hljs-literal">undefined</span>;
</div></li><li><div class="code-word"><span class="hljs-keyword">const</span> innerFn = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {
</div></li><li><div class="code-word">  <span class="hljs-keyword">if</span> (person <span class="hljs-keyword">instanceof</span> Person) {
</div></li><li><div class="code-word">    person.greet(); <span class="hljs-comment">// Ok</span>
</div></li><li><div class="code-word">  }
</div></li><li><div class="code-word">};
</div></li></ol></code></pre></div><h3 data-nodeid="2367">\u5355\u5143\u6D4B\u8BD5</h3><p data-nodeid="2368"> \u5728\u5355\u5143\u6D4B\u8BD5\u4E2D\uFF0C\u6211\u4EEC\u9700\u8981\u6D4B\u8BD5\u7684\u662F\u51FD\u6570\u7684\u8F93\u51FA\u4E0E\u9884\u8BA1\u7684\u8F93\u51FA\u662F\u5426\u76F8\u7B49\u3002\u5728 TypeScript \u7684\u7C7B\u578B\u6D4B\u8BD5\u4E2D\uFF0C\u6211\u4EEC\u9700\u8981\u6D4B\u8BD5\u7684\u662F\u7F16\u5199\u7684\u5DE5\u5177\u51FD\u6570\u8F6C\u6362\u540E\u7684\u7C7B\u578B\u4E0E\u9884\u8BA1\u7684\u7C7B\u578B\u662F\u5426\u4E00\u81F4\u3002 </p><p data-nodeid="2369"> \u6211\u4EEC\u77E5\u9053\u5F53\u8D4B\u503C\u3001\u4F20\u53C2\u7684\u7C7B\u578B\u4E0E\u9884\u671F\u4E0D\u4E00\u81F4\uFF0CTypeScript \u5C31\u4F1A\u629B\u51FA\u7C7B\u578B\u9519\u8BEF\uFF0C\u5982\u4E0B\u793A\u4F8B\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="java"><ol><li><div class="code-word"><span class="hljs-keyword">const</span> x: string = <span class="hljs-number">1</span>; <span class="hljs-comment">// TS2322: Type &#39;number&#39; is not assignable to type &#39;string&#39;.</span>
</div></li></ol></code></pre></div><p data-nodeid="2371"> \u5728\u4E0A\u8FF0\u793A\u4F8B\u4E2D\u53EF\u4EE5\u770B\u5230\uFF0C\u628A\u6570\u5B57\u5B57\u9762\u91CF 1 \u8D4B\u503C\u7ED9 string \u7C7B\u578B\u53D8\u91CF x \u65F6\uFF0C\u4F1A\u63D0\u793A TS2322 \u9519\u8BEF\u3002 </p><p data-nodeid="2372"> \u56E0\u6B64\uFF0C\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7\u6CDB\u578B\u9650\u5B9A\u9700\u8981\u6D4B\u8BD5\u7684\u7C7B\u578B\u3002\u53EA\u6709\u9700\u8981\u6D4B\u8BD5\u7684\u7C7B\u578B\u4E0E\u9884\u671F\u7C7B\u578B\u4E00\u81F4\u65F6\uFF0C\u624D\u53EF\u4EE5\u901A\u8FC7 TypeScript \u7F16\u8BD1\u5668\u7684\u68C0\u67E5\uFF0C\u5982\u4E0B\u793A\u4F8B\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="java"><ol><li><div class="code-word">type ExpectTrue&lt;T extends <span class="hljs-keyword">true</span>&gt; = T;
</div></li><li><div class="code-word">type T1 = ExpectTrue&lt;<span class="hljs-keyword">true</span>&gt;;
</div></li><li><div class="code-word">type T2 = ExpectTrue&lt;<span class="hljs-keyword">null</span>&gt;; <span class="hljs-comment">// TS2344: Type &#39;null&#39; does not satisfy the constraint &#39;true&#39;.</span>
</div></li></ol></code></pre></div><p data-nodeid="2374"> \u5728\u4E0A\u9762 ExpectTrue \u7684\u6D4B\u8BD5\u65B9\u6CD5\u4E2D\uFF0C\u56E0\u4E3A\u7B2C 1 \u884C\u9884\u671F\u7684\u7C7B\u578B\u662F true\uFF0C\u6240\u4EE5\u7B2C 2 \u884C\u7684\u5165\u53C2\u4E3A true \u65F6\u4E0D\u4F1A\u51FA\u73B0\u9519\u8BEF\u63D0\u793A\u3002\u4F46\u662F\uFF0C\u56E0\u4E3A\u7B2C 3 \u884C\u7684\u5165\u53C2\u662F null \uFF0C\u6240\u4EE5\u4F1A\u63D0\u793A\u7C7B\u578B\u9519\u8BEF\u3002 </p><p data-nodeid="2375"> \u81EA TS 3.9 \u7248\u672C\u8D77\uFF0C\u5B98\u65B9\u652F\u6301\u4E86\u4E0E @ts-ignore \u6CE8\u91CA\u76F8\u53CD\u529F\u80FD\u7684 @ts-expect-error \u6CE8\u91CA\u3002\u4F7F\u7528 @ts-expect-error \u6CE8\u91CA\uFF0C\u6211\u4EEC\u53EF\u4EE5\u6807\u8BB0\u4EE3\u7801\u4E2D\u5E94\u8BE5\u6709\u7C7B\u578B\u9519\u8BEF\u7684\u90E8\u5206\u3002 </p><p data-nodeid="2376"> \u4E0E ts-ignore \u4E0D\u540C\u7684\u662F\uFF0C\u5982\u679C\u4E0B\u4E00\u884C\u4EE3\u7801\u4E2D\u6CA1\u6709\u9519\u8BEF\uFF0C\u5219\u4F1A\u63D0\u793A TS2578 \u7684\u9519\u8BEF\uFF0C\u5982\u4E0B\u793A\u4F8B\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-comment">// @ts-expect-error</span>
</div></li><li><div class="code-word"><span class="hljs-keyword">const</span> x: <span class="hljs-built_in">number</span> = <span class="hljs-string">&#39;42&#39;</span>;
</div></li><li><div class="code-word"><span class="hljs-comment">// TS2578: Unused &#39;@ts-expect-error&#39; directive.</span>
</div></li><li><div class="code-word"><span class="hljs-comment">// @ts-expect-error</span>
</div></li><li><div class="code-word"><span class="hljs-keyword">const</span> y: <span class="hljs-built_in">number</span> = <span class="hljs-number">42</span>;
</div></li></ol></code></pre></div><p data-nodeid="2378"> \u5728\u4E0A\u8FF0\u793A\u4F8B\u7684\u7B2C 2 \u884C\u4EE3\u7801\u5904\u5E76\u4E0D\u4F1A\u63D0\u793A\u7C7B\u578B\u4E0D\u517C\u5BB9\u7684\u9519\u8BEF\uFF0C\u8FD9\u662F\u56E0\u4E3A @ts-expect-error \u6CE8\u91CA\u547D\u4EE4\u8868\u793A\u4E0B\u4E00\u884C\u5E94\u5F53\u6709\u7C7B\u578B\u9519\u8BEF\uFF0C\u7B26\u5408\u9884\u671F\u3002\u800C\u7B2C 6 \u884C\u7684\u4EE3\u7801\u4F1A\u63D0\u793A TS2578 \u672A\u4F7F\u7528\u7684 @ts-expect-error \u547D\u4EE4\uFF0C\u8FD9\u662F\u56E0\u4E3A\u7B2C 6 \u884C\u7684\u4EE3\u7801\u6CA1\u6709\u7C7B\u578B\u9519\u8BEF\u3002 </p><blockquote data-nodeid="2379"><p data-nodeid="2380"><strong data-nodeid="2509">\u5907\u6CE8</strong>\uFF1A<code data-backticks="1" data-nodeid="2507">@ts-expect-error</code>\u6CE8\u91CA\u547D\u4EE4\u5728\u7F16\u5199\u9884\u671F\u5931\u8D25\u7684\u5355\u5143\u6D4B\u8BD5\u4E2D\u5F88\u6709\u7528\u5904\u3002 </p></blockquote><h3 data-nodeid="2381">\u5C0F\u7ED3\u4E0E\u9884\u544A</h3><p data-nodeid="2382"> \u8FD9\u4E00\u8BB2\u6211\u4EEC\u4ECB\u7ECD\u4E86\u4E00\u4E9B TypeScript \u5F00\u53D1\u4E2D\u53EF\u80FD\u9047\u5230\u7684\u9519\u8BEF\u7801\uFF0C\u5E76\u5206\u6790\u89E3\u6790\u4E86\u9519\u8BEF\u7684\u539F\u56E0\uFF0C\u540C\u65F6\u4ECB\u7ECD\u4E86\u5982\u4F55\u4E3A\u4E4B\u524D\u5B66\u4E60\u7684\u5DE5\u5177\u7C7B\u578B\u3001\u81EA\u5B9A\u4E49\u51FD\u6570\u7F16\u5199\u5355\u5143\u6D4B\u8BD5\u3002 </p><p data-nodeid="2383"> 18 \u8BB2\u6211\u4EEC\u5C06\u6B63\u5F0F\u8FDB\u5165\u5B9E\u8DF5\u73AF\u8282\uFF0C\u6559\u4F60\u5982\u4F55\u4F7F\u7528 TypeScript \u5F00\u53D1\u7C7B\u578B\u5B89\u5168\u7684 HTTP \u9759\u6001\u6587\u4EF6\u670D\u52A1\uFF0C\u656C\u8BF7\u671F\u5F85\uFF01 </p><p data-nodeid="2384"> \u53E6\u5916\uFF0C\u5982\u679C\u4F60\u89C9\u5F97\u672C\u4E13\u680F\u6709\u4EF7\u503C\uFF0C\u6B22\u8FCE\u5206\u4EAB\u7ED9\u66F4\u591A\u597D\u53CB\u3002 </p></div></div>`,1),v=[c,p,t,r];function y(h,w){return d(),a("div",o,v)}var j=e(n,[["render",y]]);export{j as default};
