import{o as a,c as n,b as s,d as l,a as i}from"./app.60568e47.js";import{_ as d}from"./plugin-vue_export-helper.21dcd24c.js";const c={},o={"data-v-1605a430":""},p=s("h1",{"data-v-1605a430":"",class:"main-title"}," 05 | \u51FD\u6570\u7C7B\u578B\uFF1A\u8FD4\u56DE\u503C\u7C7B\u578B\u548C\u53C2\u6570\u7C7B\u578B\u5230\u5E95\u5982\u4F55\u5B9A\u4E49\uFF1F ",-1),e=s("div",{"data-v-1605a430":"",class:"main-tips"},[l(" 2021/05/18 "),s("span",{"data-v-1605a430":"",class:"auth"},"\u4E7E\u5143")],-1),t=s("div",{"data-v-1605a430":"",class:"media-player-wrap"},[s("div",{"data-v-6ecd2302":"","data-v-1605a430":""},[s("div",{"data-v-6ecd2302":"",class:"media-container"},[s("div",{"data-v-6ecd2302":"",class:"button-wrap inline-block"},[s("div",{"data-v-6ecd2302":"",class:"button-icon inline-block"})]),s("div",{"data-v-6ecd2302":"",class:"data-wrap inline-block"},[s("div",{"data-v-6ecd2302":"",class:"progress-bar"},[s("div",{class:"vue-slider vue-slider-ltr",style:{padding:"7px 0px",width:"auto",height:"4px"}},[s("div",{class:"vue-slider-rail",style:{height:"2px",background:"rgb(213, 218, 223)","border-radius":"1.5px"}},[s("div",{class:"vue-slider-process",style:{height:"100%",top:"0px",left:"0%",width:"0%","transition-property":"width, left","transition-duration":"0.5s",background:"rgb(252, 215, 102)"}}),s("div",{"aria-valuetext":"00:00/15:21",class:"vue-slider-dot vue-slider-dot-hover",role:"slider","aria-valuenow":"0","aria-valuemin":"0","aria-valuemax":"921","aria-orientation":"horizontal",tabindex:"0",style:{width:"14px",height:"14px",transform:"translate(-50%, -50%)",top:"50%",left:"0%",transition:"left 0.5s ease 0s"}},[s("div",{class:"vue-slider-dot-handle",style:{width:"16px",height:"16px",background:"rgb(252, 215, 102)","box-shadow":"none","margin-top":"-1px","z-index":"1"}}),s("div",{class:"vue-slider-dot-tooltip vue-slider-dot-tooltip-top"},[s("div",{class:"vue-slider-dot-tooltip-inner vue-slider-dot-tooltip-inner-top",style:{padding:"2px 12px","border-radius":"14px","font-size":"14px",color:"rgb(0, 0, 0)",background:"rgb(252, 215, 102)","min-width":"20px","border-color":"rgb(252, 215, 102)"}},[s("span",{class:"vue-slider-dot-tooltip-text"},"00:00/15:21")])])])])])]),s("div",{"data-v-6ecd2302":"",class:"detail-wrap"},[s("div",{"data-v-6ecd2302":"",class:"detail-one"},"40.06M"),s("div",{"data-v-6ecd2302":"",class:"detail-two"},"00:00/15:21")])]),s("div",{"data-v-6ecd2302":"",class:"division-line inline-block"}),s("div",{"data-v-6ecd2302":"",class:"viedo-wrap inline-block"},[s("div",{"data-v-6ecd2302":"",class:"viedo-icon"}),s("div",{"data-v-6ecd2302":"",class:"text"},"\u770B\u89C6\u9891")])])])],-1),r=i(`<div data-v-1605a430="" class="main-container"><div data-v-1605a430="" class="rich-text-wrap"><p data-nodeid="36887"> 04 \u8BB2\u6211\u4EEC\u7B80\u5355\u4ECB\u7ECD\u4E86\u51FD\u6570\u5B9A\u4E49\u65F6\u7684\u76F8\u5173\u7C7B\u578B\u63A8\u65AD\u7279\u6027\uFF0C\u8FD9\u4E00\u8BB2\u5C06\u6DF1\u5165\u4ECB\u7ECD\u4E00\u4E0B\u51FD\u6570\u7C7B\u578B\u3002 </p><blockquote data-nodeid="36888"><p data-nodeid="36889"> \u5B66\u4E60\u5EFA\u8BAE\uFF1A\u4F7F\u7528 VS Code \u65B0\u5EFA\u4E00\u4E2A 05.ts \u6587\u4EF6\uFF0C\u5C1D\u8BD5\u8FD9\u4E00\u8BB2\u4E2D\u6240\u6709\u793A\u4F8B\u3002 </p></blockquote><p data-nodeid="36890"> \u5728 JavaScript \u4E2D\uFF0C\u51FD\u6570\u662F\u6784\u5EFA\u5E94\u7528\u7684\u4E00\u5757\u57FA\u77F3\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u51FD\u6570\u62BD\u79BB\u53EF\u590D\u7528\u7684\u903B\u8F91\u3001\u62BD\u8C61\u6A21\u578B\u3001\u5C01\u88C5\u8FC7\u7A0B\u3002\u5728 TypeScript \u4E2D\uFF0C\u867D\u7136\u6709\u7C7B\u3001\u547D\u540D\u7A7A\u95F4\u3001\u6A21\u5757\uFF0C\u4F46\u662F\u51FD\u6570\u540C\u6837\u662F\u6700\u57FA\u672C\u3001\u6700\u91CD\u8981\u7684\u5143\u7D20\u4E4B\u4E00\u3002 </p><p data-nodeid="36891"> \u5728 TypeScript \u91CC\uFF0C\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7 function \u5B57\u9762\u91CF\u548C\u7BAD\u5934\u51FD\u6570\u7684\u5F62\u5F0F\u5B9A\u4E49\u51FD\u6570\uFF0C\u793A\u4F8B\u5982\u4E0B\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">add</span>(<span class="hljs-params"></span>) </span>{}
</div></li><li><div class="code-word"><span class="hljs-keyword">const</span> add = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> {}
</div></li></ol></code></pre></div><p data-nodeid="36893"> \u6211\u4EEC\u8FD8\u53EF\u4EE5\u663E\u5F0F\u6307\u5B9A\u51FD\u6570\u53C2\u6570\u548C\u8FD4\u56DE\u503C\u7684\u7C7B\u578B\uFF0C\u793A\u4F8B\u5982\u4E0B\u3002 </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-keyword">const</span> add = (a: <span class="hljs-built_in">number</span>, b: <span class="hljs-built_in">number</span>): <span class="hljs-function"><span class="hljs-params">number</span> =&gt;</span> {
</div></li><li><div class="code-word">     <span class="hljs-keyword">return</span> a + b;
</div></li><li><div class="code-word">}
</div></li></ol></code></pre></div><p data-nodeid="36895"> \u5982\u4E0A\u8FF0\u793A\u4F8B\u4E2D\uFF0C\u53C2\u6570\u540D\u540E\u7684 &#39;:number&#39; \u8868\u793A\u53C2\u6570\u7C7B\u578B\u90FD\u662F\u6570\u5B57\u7C7B\u578B\uFF0C\u5706\u62EC\u53F7\u540E\u7684 &#39;: number&#39; \u5219\u8868\u793A\u8FD4\u56DE\u503C\u7C7B\u578B\u4E5F\u662F\u6570\u5B57\u7C7B\u578B\u3002\u4E0B\u9762\u6211\u4EEC\u5177\u4F53\u4ECB\u7ECD\u4E00\u4E0B\u8FD4\u56DE\u503C\u7C7B\u578B\u548C\u53C2\u6570\u7C7B\u578B\u3002 </p><h3 data-nodeid="36896">\u8FD4\u56DE\u503C\u7C7B\u578B</h3><p data-nodeid="36897"> \u5728 JavaScript \u4E2D\uFF0C\u6211\u4EEC\u77E5\u9053\u4E00\u4E2A\u51FD\u6570\u53EF\u4EE5\u6CA1\u6709\u663E\u5F0F return\uFF0C\u6B64\u65F6\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u5E94\u8BE5\u662F undefined\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fn</span>(<span class="hljs-params"></span>) </span>{
</div></li><li><div class="code-word">  <span class="hljs-comment">// TODO</span>
</div></li><li><div class="code-word">}
</div></li><li><div class="code-word"><span class="hljs-built_in">console</span>.log(fn()); <span class="hljs-comment">// =&gt; undefined</span>
</div></li></ol></code></pre></div><p data-nodeid="36899"><strong data-nodeid="37018">\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u5728 TypeScript \u4E2D\uFF0C\u5982\u679C\u6211\u4EEC\u663E\u5F0F\u58F0\u660E\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\u4E3A undfined\uFF0C\u5C06\u4F1A\u5F97\u5230\u5982\u4E0B\u6240\u793A\u7684\u9519\u8BEF\u63D0\u9192\u3002</strong></p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fn</span>(<span class="hljs-params"></span>): <span class="hljs-title">undefined</span> </span>{ <span class="hljs-comment">// ts(2355) A function whose declared type is neither &#39;void&#39; nor &#39;any&#39; must return a value</span>
</div></li><li><div class="code-word">  <span class="hljs-comment">// TODO</span>
</div></li><li><div class="code-word">}
</div></li></ol></code></pre></div><p data-nodeid="36901"> \u6B64\u65F6\uFF0C\u6B63\u786E\u7684\u505A\u6CD5\u662F\u4F7F\u7528 03 \u8BB2\u4ECB\u7ECD\u7684 void \u7C7B\u578B\u6765\u8868\u793A\u51FD\u6570\u6CA1\u6709\u8FD4\u56DE\u503C\u7684\u7C7B\u578B\uFF08\u8FD9\u662F\u201C\u5E9F\u67F4\u201D void \u7C7B\u578B\u552F\u4E00\u6709\u7528\u7684\u573A\u666F\uFF09\uFF0C\u793A\u4F8B\u5982\u4E0B\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fn1</span>(<span class="hljs-params"></span>): <span class="hljs-title">void</span> </span>{
</div></li><li><div class="code-word">}
</div></li><li><div class="code-word">fn1().doSomething(); <span class="hljs-comment">// ts(2339) Property &#39;doSomething&#39; does not exist on type &#39;void&#39;.</span>
</div></li></ol></code></pre></div><p data-nodeid="36903"> \u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u7C7B\u4F3C\u5B9A\u4E49\u7BAD\u5934\u51FD\u6570\u7684\u8BED\u6CD5\u6765\u8868\u793A\u51FD\u6570\u7C7B\u578B\u7684\u53C2\u6570\u548C\u8FD4\u56DE\u503C\u7C7B\u578B\uFF0C\u6B64\u65F6<code data-backticks="1" data-nodeid="37021">=&gt; \u7C7B\u578B</code>\u4EC5\u4EC5\u7528\u6765\u5B9A\u4E49\u4E00\u4E2A\u51FD\u6570\u7C7B\u578B\u800C\u4E0D\u7528\u5B9E\u73B0\u8FD9\u4E2A\u51FD\u6570\u3002 </p><p data-nodeid="36904"><strong data-nodeid="37040">\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u8FD9\u91CC\u7684</strong><code data-backticks="1" data-nodeid="37026">=&gt;</code><strong data-nodeid="37041">\u4E0E ES6 \u4E2D\u7BAD\u5934\u51FD\u6570\u7684</strong><code data-backticks="1" data-nodeid="37030">=&gt;</code><strong data-nodeid="37042">\u6709\u6240\u4E0D\u540C\u3002TypeScript \u51FD\u6570\u7C7B\u578B\u4E2D\u7684</strong><code data-backticks="1" data-nodeid="37034">=&gt;</code><strong data-nodeid="37043">\u7528\u6765\u8868\u793A\u51FD\u6570\u7684\u5B9A\u4E49\uFF0C\u5176\u5DE6\u4FA7\u662F\u51FD\u6570\u7684\u53C2\u6570\u7C7B\u578B\uFF0C\u53F3\u4FA7\u662F\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\uFF1B\u800C ES6 \u4E2D\u7684</strong><code data-backticks="1" data-nodeid="37038">=&gt;</code>\u662F\u51FD\u6570\u7684\u5B9E\u73B0\u3002 </p><p data-nodeid="36905"> \u5982\u4E0B\u793A\u4F8B\u4E2D\uFF0C\u6211\u4EEC\u5B9A\u4E49\u4E86\u4E00\u4E2A\u51FD\u6570\u7C7B\u578B\uFF08\u8FD9\u91CC\u6211\u4EEC\u4F7F\u7528\u4E86\u7C7B\u578B\u522B\u540D type\uFF0C\u8BE6\u89C1 07 \u8BB2\uFF09\uFF0C\u5E76\u4E14\u4F7F\u7528\u7BAD\u5934\u51FD\u6570\u5B9E\u73B0\u4E86\u8FD9\u4E2A\u7C7B\u578B\u3002 </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-keyword">type</span> Adder = <span class="hljs-function">(<span class="hljs-params">a: <span class="hljs-built_in">number</span>, b: <span class="hljs-built_in">number</span></span>) =&gt;</span> <span class="hljs-built_in">number</span>; <span class="hljs-comment">// TypeScript \u51FD\u6570\u7C7B\u578B\u5B9A\u4E49</span>
</div></li><li><div class="code-word"><span class="hljs-keyword">const</span> add: Adder = <span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> a + b; <span class="hljs-comment">// ES6 \u7BAD\u5934\u51FD\u6570</span>
</div></li></ol></code></pre></div><p data-nodeid="36907"><strong data-nodeid="37048">\u8FD9\u91CC\u8BF7\u6CE8\u610F\uFF1A\u53F3\u4FA7\u7684\u7BAD\u5934\u51FD\u6570\u5E76\u6CA1\u6709\u663E\u5F0F\u58F0\u660E\u7C7B\u578B\u6CE8\u89E3\uFF0C\u4E0D\u8FC7\u53EF\u4EE5\u6839\u636E 04 \u8BB2\u4E2D\u63D0\u5230\u7684\u4E0A\u4E0B\u6587\u7C7B\u578B\u8FDB\u884C\u63A8\u65AD\u3002</strong></p><p data-nodeid="36908"> \u5728\u5BF9\u8C61\uFF08\u5373\u63A5\u53E3\u7C7B\u578B\uFF0C\u8BE6\u89C1 07 \u8BB2\uFF09\u4E2D\uFF0C\u9664\u4E86\u4F7F\u7528\u8FD9\u79CD\u58F0\u660E\u8BED\u6CD5\uFF0C\u6211\u4EEC\u8FD8\u53EF\u4EE5\u4F7F\u7528\u7C7B\u4F3C\u5BF9\u8C61\u5C5E\u6027\u7684\u7B80\u5199\u8BED\u6CD5\u6765\u58F0\u660E\u51FD\u6570\u7C7B\u578B\u7684\u5C5E\u6027\uFF0C\u5982\u4E0B\u4EE3\u7801\u6240\u793A\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-keyword">interface</span> Entity {
</div></li><li><div class="code-word">    add: <span class="hljs-function">(<span class="hljs-params">a: <span class="hljs-built_in">number</span>, b: <span class="hljs-built_in">number</span></span>)\xA0=&gt;</span> <span class="hljs-built_in">number</span>;
</div></li><li><div class="code-word">    del(a: <span class="hljs-built_in">number</span>, b: <span class="hljs-built_in">number</span>): <span class="hljs-built_in">number</span>;
</div></li><li><div class="code-word">}
</div></li><li><div class="code-word"><span class="hljs-keyword">const</span> entity: Entity = {
</div></li><li><div class="code-word">    add: <span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> a + b,
</div></li><li><div class="code-word">    del(a, b) {
</div></li><li><div class="code-word">      <span class="hljs-keyword">return</span> a - b;
</div></li><li><div class="code-word">    },
</div></li><li><div class="code-word">};
</div></li></ol></code></pre></div><p data-nodeid="36910"> \u5728\u67D0\u79CD\u610F\u4E49\u4E0A\u6765\u8BF4\uFF0C\u8FD9\u4E24\u79CD\u5F62\u5F0F\u90FD\u662F\u7B49\u4EF7\u7684\u3002\u4F46\u662F\u5F88\u591A\u65F6\u5019\uFF0C\u6211\u4EEC\u4E0D\u5FC5\u6216\u8005\u4E0D\u80FD\u663E\u5F0F\u5730\u6307\u660E\u8FD4\u56DE\u503C\u7684\u7C7B\u578B\uFF0C\u8FD9\u5C31\u6D89\u53CA\u53EF\u7F3A\u7701\u548C\u53EF\u63A8\u65AD\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\u7684\u8BB2\u89E3\u3002 </p><h4 data-nodeid="36911">\u53EF\u7F3A\u7701\u548C\u53EF\u63A8\u65AD\u7684\u8FD4\u56DE\u503C\u7C7B\u578B</h4><p data-nodeid="36912"> \u5E78\u8FD0\u7684\u662F\uFF0C\u51FD\u6570\u8FD4\u56DE\u503C\u7684\u7C7B\u578B\u53EF\u4EE5\u5728 TypeScript \u4E2D\u88AB\u63A8\u65AD\u51FA\u6765\uFF0C\u5373\u53EF\u7F3A\u7701\u3002 </p><p data-nodeid="36913"> \u51FD\u6570\u5185\u662F\u4E00\u4E2A\u76F8\u5BF9\u72EC\u7ACB\u7684\u4E0A\u4E0B\u6587\u73AF\u5883\uFF0C\u6211\u4EEC\u53EF\u4EE5\u6839\u636E\u5165\u53C2\u5BF9\u503C\u52A0\u5DE5\u8BA1\u7B97\uFF0C\u5E76\u8FD4\u56DE\u65B0\u7684\u503C\u3002\u4ECE\u7C7B\u578B\u5C42\u9762\u770B\uFF0C\u6211\u4EEC\u4E5F\u53EF\u4EE5\u901A\u8FC7\u7C7B\u578B\u63A8\u65AD\uFF08\u56DE\u60F3\u4E00\u4E0B 04 \u8BB2\u4E2D\u7684\u7C7B\u578B\u63A8\u65AD\u3001\u4E0A\u4E0B\u6587\u7C7B\u578B\u63A8\u65AD\uFF09\u52A0\u5DE5\u8BA1\u7B97\u5165\u53C2\u7684\u7C7B\u578B\uFF0C\u5E76\u8FD4\u56DE\u65B0\u7684\u7C7B\u578B\uFF0C\u793A\u4F8B\u5982\u4E0B\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">computeTypes</span>(<span class="hljs-params">one: <span class="hljs-built_in">string</span>, two: <span class="hljs-built_in">number</span></span>) </span>{
</div></li><li><div class="code-word">  <span class="hljs-keyword">const</span> nums = [two];
</div></li><li><div class="code-word">  <span class="hljs-keyword">const</span> strs = [one]
</div></li><li><div class="code-word">  <span class="hljs-keyword">return</span> {
</div></li><li><div class="code-word">    nums,
</div></li><li><div class="code-word">    strs
</div></li><li><div class="code-word">  } <span class="hljs-comment">// \u8FD4\u56DE { nums: number[]; strs: string[] } \u7684\u7C7B\u578B </span>
</div></li><li><div class="code-word">}
</div></li></ol></code></pre></div><p data-nodeid="36915"><strong data-nodeid="37057">\u8BF7\u8BB0\u4F4F\uFF1A\u8FD9\u662F\u4E00\u4E2A\u5F88\u91CD\u8981\u4E5F\u5F88\u6709\u610F\u601D\u7684\u7279\u6027\uFF0C\u51FD\u6570\u8FD4\u56DE\u503C\u7684\u7C7B\u578B\u63A8\u65AD\u7ED3\u5408\u6CDB\u578B\uFF08\u6211\u4EEC\u4F1A\u5728 10 \u8BB2\u4E2D\u8BE6\u7EC6\u4ECB\u7ECD\uFF09\u53EF\u4EE5\u5B9E\u73B0\u7279\u522B\u590D\u6742\u7684\u7C7B\u578B\u8BA1\u7B97\uFF08\u672C\u8D28\u662F\u590D\u6742\u7684\u7C7B\u578B\u63A8\u65AD\uFF0C\u8FD9\u91CC\u79F0\u4E4B\u4E3A\u8BA1\u7B97\u662F\u4E3A\u4E86\u8868\u660E\u5176\u590D\u6742\u6027\uFF09\uFF0C\u6BD4\u5982 Redux Model \u4E2D State\u3001Reducer\u3001Effect \u7C7B\u578B\u7684\u5173\u8054\u3002</strong></p><p data-nodeid="36916"> \u4E00\u822C\u60C5\u51B5\u4E0B\uFF0CTypeScript \u4E2D\u7684\u51FD\u6570\u8FD4\u56DE\u503C\u7C7B\u578B\u662F\u53EF\u4EE5\u7F3A\u7701\u548C\u63A8\u65AD\u51FA\u6765\u7684\uFF0C\u4F46\u662F\u6709\u4E9B\u7279\u4F8B\u9700\u8981\u6211\u4EEC\u663E\u5F0F\u58F0\u660E\u8FD4\u56DE\u503C\u7C7B\u578B\uFF0C\u6BD4\u5982 Generator \u51FD\u6570\u7684\u8FD4\u56DE\u503C\u3002 </p><h4 data-nodeid="36917">Generator \u51FD\u6570\u7684\u8FD4\u56DE\u503C</h4><p data-nodeid="36918"> ES6 \u4E2D\u65B0\u589E\u7684 Generator \u51FD\u6570\u5728 TypeScript \u4E2D\u4E5F\u6709\u5BF9\u5E94\u7684\u7C7B\u578B\u5B9A\u4E49\u3002 </p><p data-nodeid="36919"> Generator \u51FD\u6570\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A Iterator \u8FED\u4EE3\u5668\u5BF9\u8C61\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528 Generator \u7684\u540C\u540D\u63A5\u53E3\u6CDB\u578B\u6216\u8005 Iterator \u7684\u540C\u540D\u63A5\u53E3\u6CDB\u578B\uFF08\u5728 10 \u8BB2\u4F1A\u4ECB\u7ECD\uFF09\u8868\u793A\u8FD4\u56DE\u503C\u7684\u7C7B\u578B\uFF08Generator \u7C7B\u578B\u7EE7\u627F\u4E86 Iterator \u7C7B\u578B\uFF09\uFF0C\u793A\u4F8B\u5982\u4E0B\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-keyword">type</span>\xA0AnyType\xA0=\xA0<span class="hljs-built_in">boolean</span>;
</div></li><li><div class="code-word"><span class="hljs-keyword">type</span>\xA0AnyReturnType\xA0=\xA0<span class="hljs-built_in">string</span>;
</div></li><li><div class="code-word"><span class="hljs-keyword">type</span>\xA0AnyNextType\xA0=\xA0<span class="hljs-built_in">number</span>;
</div></li><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span>\xA0*<span class="hljs-title">gen</span>(<span class="hljs-params"></span>):\xA0<span class="hljs-title">Generator</span>&lt;<span class="hljs-title">AnyType</span>, <span class="hljs-title">AnyReturnType</span>, <span class="hljs-title">AnyNextType</span>&gt; </span>{
</div></li><li><div class="code-word">  <span class="hljs-keyword">const</span> nextValue = <span class="hljs-keyword">yield</span> <span class="hljs-literal">true</span>; <span class="hljs-comment">// nextValue \u7C7B\u578B\u662F number\uFF0Cyield \u540E\u5FC5\u987B\u662F boolean \u7C7B\u578B</span>
</div></li><li><div class="code-word">  <span class="hljs-keyword">return</span> <span class="hljs-string">\`<span class="hljs-subst">\${nextValue}</span>\`</span>; <span class="hljs-comment">// \u5FC5\u987B\u8FD4\u56DE string \u7C7B\u578B</span>
</div></li><li><div class="code-word">}
</div></li></ol></code></pre></div><p data-nodeid="36921"><strong data-nodeid="37065">\u6CE8\u610F\uFF1ATypeScript 3.6 \u4E4B\u524D\u7684\u7248\u672C\u4E0D\u652F\u6301\u6307\u5B9A next\u3001return \u7684\u7C7B\u578B\uFF0C\u6240\u4EE5\u5728\u67D0\u4E9B\u6709\u70B9\u5386\u53F2\u7684\u4EE3\u7801\u4E2D\uFF0C\u6211\u4EEC\u53EF\u80FD\u4F1A\u770B\u5230 Generator \u548C Iterator \u7C7B\u578B\u4E0D\u4E00\u6837\u7684\u8868\u8FF0\u3002</strong></p><h3 data-nodeid="36922">\u53C2\u6570\u7C7B\u578B</h3><p data-nodeid="36923"> \u4E86\u89E3\u4E86\u5B9A\u4E49\u51FD\u6570\u7684\u57FA\u672C\u8BED\u6CD5\u4EE5\u53CA\u8FD4\u56DE\u503C\u7C7B\u578B\u540E\uFF0C\u6211\u4EEC\u518D\u6765\u8BE6\u7EC6\u770B\u4E00\u4E0B\u53EF\u9009\u53C2\u6570\u3001\u9ED8\u8BA4\u53C2\u6570\u3001\u5269\u4F59\u53C2\u6570\u7684\u51E0\u4E2A\u7279\u6027\u3002 </p><h4 data-nodeid="36924">\u53EF\u9009\u53C2\u6570\u548C\u9ED8\u8BA4\u53C2\u6570</h4><p data-nodeid="36925"> \u5728\u5B9E\u9645\u5DE5\u4F5C\u4E2D\uFF0C\u6211\u4EEC\u53EF\u80FD\u7ECF\u5E38\u78B0\u5230\u51FD\u6570\u53C2\u6570\u53EF\u4F20\u53EF\u4E0D\u4F20\u7684\u60C5\u51B5\uFF0C\u5F53\u7136 TypeScript \u4E5F\u652F\u6301\u8FD9\u79CD\u51FD\u6570\u7C7B\u578B\u8868\u8FBE\uFF0C\u5982\u4E0B\u4EE3\u7801\u6240\u793A\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">log</span>(<span class="hljs-params">x?: <span class="hljs-built_in">string</span></span>) </span>{
</div></li><li><div class="code-word">  <span class="hljs-keyword">return</span> x;
</div></li><li><div class="code-word">}
</div></li><li><div class="code-word">log(); <span class="hljs-comment">// =&gt; undefined</span>
</div></li><li><div class="code-word">log(<span class="hljs-string">&#39;hello world&#39;</span>); <span class="hljs-comment">// =&gt; hello world</span>
</div></li></ol></code></pre></div><p data-nodeid="36927"> \u5728\u4E0A\u8FF0\u4EE3\u7801\u4E2D\uFF0C\u6211\u4EEC\u5728\u7C7B\u578B\u6807\u6CE8\u7684<code data-backticks="1" data-nodeid="37071">:</code>\u524D\u6DFB\u52A0<code data-backticks="1" data-nodeid="37073">?</code>\u8868\u793A log \u51FD\u6570\u7684\u53C2\u6570 x \u5C31\u662F\u53EF\u7F3A\u7701\u7684\u3002 </p><p data-nodeid="36928"> \u4E5F\u5C31\u662F\u8BF4\u53C2\u6570 x \u7684\u7C7B\u578B\u53EF\u80FD\u662F undefined\uFF08\u7B2C 5 \u884C\u8C03\u7528 log \u65F6\u4E0D\u4F20\u5165\u5B9E\u53C2\uFF09\u7C7B\u578B\u6216\u8005\u662F string \u7C7B\u578B\uFF08\u7B2C 6 \u884C\u8C03\u7528 log \u4F20\u5165 &#39;hello world&#39; \u5B9E\u53C2\uFF09\uFF0C\u90A3\u662F\u4E0D\u662F\u610F\u5473\u7740\u53EF\u7F3A\u7701\u548C\u7C7B\u578B\u662F undefined \u7B49\u4EF7\u5462\uFF1F\u6211\u4EEC\u6765\u770B\u770B\u4EE5\u4E0B\u7684\u793A\u4F8B\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">log</span>(<span class="hljs-params">x?: <span class="hljs-built_in">string</span></span>) </span>{
</div></li><li><div class="code-word">  <span class="hljs-built_in">console</span>.log(x);
</div></li><li><div class="code-word">}
</div></li><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">log1</span>(<span class="hljs-params">x: <span class="hljs-built_in">string</span> | <span class="hljs-literal">undefined</span></span>) </span>{
</div></li><li><div class="code-word">  <span class="hljs-built_in">console</span>.log(x);
</div></li><li><div class="code-word">}
</div></li><li><div class="code-word">log();
</div></li><li><div class="code-word">log(<span class="hljs-literal">undefined</span>);
</div></li><li><div class="code-word">log1(); <span class="hljs-comment">// ts(2554) Expected 1 arguments, but got 0</span>
</div></li><li><div class="code-word">log1(<span class="hljs-literal">undefined</span>);
</div></li></ol></code></pre></div><p data-nodeid="36930"><strong data-nodeid="37083">\u7B54\u6848\u663E\u800C\u6613\u89C1\uFF1A\u8FD9\u91CC\u7684 ?: \u8868\u793A\u53C2\u6570\u53EF\u4EE5\u7F3A\u7701\u3001\u53EF\u4EE5\u4E0D\u4F20\uFF0C\u4E5F\u5C31\u662F\u8BF4\u8C03\u7528\u51FD\u6570\u65F6\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4E0D\u663E\u5F0F\u4F20\u5165\u53C2\u6570\u3002\u4F46\u662F\uFF0C\u5982\u679C\u6211\u4EEC\u58F0\u660E\u4E86\u53C2\u6570\u7C7B\u578B\u4E3A xxx | undefined\uFF08\u8FD9\u91CC\u4F7F\u7528\u4E86\u8054\u5408\u7C7B\u578B |\uFF0C\u8BE6\u89C1 08 \u8BB2\uFF09\uFF0C\u5C31\u8868\u793A\u51FD\u6570\u53C2\u6570\u662F\u4E0D\u53EF\u7F3A\u7701\u4E14\u7C7B\u578B\u5FC5\u987B\u662F xxx \u6216\u8005 undfined\u3002</strong></p><p data-nodeid="36931"> \u56E0\u6B64\uFF0C\u5728\u4E0A\u8FF0\u4EE3\u7801\u4E2D\uFF0Clog1 \u51FD\u6570\u5982\u679C\u4E0D\u663E\u793A\u4F20\u5165\u51FD\u6570\u7684\u53C2\u6570\uFF0CTypeScript \u5C31\u4F1A\u62A5\u4E00\u4E2A ts(2554) \u7684\u9519\u8BEF\uFF0C\u5373\u51FD\u6570\u9700\u8981 1 \u4E2A\u53C2\u6570\uFF0C\u4F46\u662F\u6211\u4EEC\u53EA\u4F20\u5165\u4E86 0 \u4E2A\u53C2\u6570\u3002 </p><p data-nodeid="36932"> \u5728 ES6 \u4E2D\u652F\u6301\u51FD\u6570\u9ED8\u8BA4\u53C2\u6570\u7684\u529F\u80FD\uFF0C\u800C TypeScript \u4F1A\u6839\u636E\u51FD\u6570\u7684\u9ED8\u8BA4\u53C2\u6570\u7684\u7C7B\u578B\u6765\u63A8\u65AD\u51FD\u6570\u53C2\u6570\u7684\u7C7B\u578B\uFF0C\u793A\u4F8B\u5982\u4E0B\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">log</span>(<span class="hljs-params">x = &#39;hello&#39;</span>) </span>{
</div></li><li><div class="code-word">    <span class="hljs-built_in">console</span>.log(x);
</div></li><li><div class="code-word">}
</div></li><li><div class="code-word">log(); <span class="hljs-comment">// =&gt; &#39;hello&#39;</span>
</div></li><li><div class="code-word">log(<span class="hljs-string">&#39;hi&#39;</span>); <span class="hljs-comment">// =&gt; &#39;hi&#39;</span>
</div></li><li><div class="code-word">log(<span class="hljs-number">1</span>); <span class="hljs-comment">// ts(2345) Argument of type &#39;1&#39; is not assignable to parameter of type &#39;string | undefined&#39;</span>
</div></li></ol></code></pre></div><p data-nodeid="36934"> \u5728\u4E0A\u8FF0\u793A\u4F8B\u4E2D\uFF0C\u6839\u636E\u51FD\u6570\u7684\u9ED8\u8BA4\u53C2\u6570 &#39;hello&#39; \uFF0CTypeScript \u63A8\u65AD\u51FA\u4E86 x \u7684\u7C7B\u578B\u4E3A string | undefined\u3002 </p><p data-nodeid="36935"> \u5F53\u7136\uFF0C\u5BF9\u4E8E\u9ED8\u8BA4\u53C2\u6570\uFF0CTypeScript \u4E5F\u53EF\u4EE5\u663E\u5F0F\u58F0\u660E\u53C2\u6570\u7684\u7C7B\u578B\uFF08\u4E00\u822C\u9ED8\u8BA4\u53C2\u6570\u7684\u7C7B\u578B\u662F\u53C2\u6570\u7C7B\u578B\u7684\u5B50\u96C6\u65F6\uFF0C\u6211\u4EEC\u624D\u9700\u8981\u8FD9\u4E48\u505A\uFF09\u3002\u4E0D\u8FC7\uFF0C\u6B64\u65F6\u7684\u9ED8\u8BA4\u53C2\u6570\u53EA\u8D77\u5230\u53C2\u6570\u9ED8\u8BA4\u503C\u7684\u4F5C\u7528\uFF0C\u5982\u4E0B\u4EE3\u7801\u6240\u793A\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">log1</span>(<span class="hljs-params">x: <span class="hljs-built_in">string</span> = &#39;hello&#39;</span>) </span>{
</div></li><li><div class="code-word">    <span class="hljs-built_in">console</span>.log(x);
</div></li><li><div class="code-word">}
</div></li><li><div class="code-word"><span class="hljs-comment">// ts(2322) Type &#39;string&#39; is not assignable to type &#39;number&#39;</span>
</div></li><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">log2</span>(<span class="hljs-params">x: <span class="hljs-built_in">number</span> = &#39;hello&#39;</span>) </span>{
</div></li><li><div class="code-word">    <span class="hljs-built_in">console</span>.log(x);
</div></li><li><div class="code-word">}
</div></li><li><div class="code-word">log2();
</div></li><li><div class="code-word">log2(<span class="hljs-number">1</span>);
</div></li><li><div class="code-word">log2(<span class="hljs-string">&#39;1&#39;</span>); <span class="hljs-comment">// ts(2345) Argument of type &#39;&quot;1&quot;&#39; is not assignable to parameter of type &#39;number | undefined&#39;</span>
</div></li></ol></code></pre></div><p data-nodeid="36937"> \u4E0A\u4F8B\u51FD\u6570 log2 \u4E2D\uFF0C\u6211\u4EEC\u663E\u5F0F\u58F0\u660E\u4E86\u51FD\u6570\u53C2\u6570 x \u7684\u7C7B\u578B\u4E3A number\uFF0C\u8868\u793A\u51FD\u6570\u53C2\u6570 x \u7684\u7C7B\u578B\u53EF\u4EE5\u4E0D\u4F20\u6216\u8005\u662F number \u7C7B\u578B\u3002\u56E0\u6B64\uFF0C\u5982\u679C\u6211\u4EEC\u5C06\u9ED8\u8BA4\u503C\u8BBE\u7F6E\u4E3A\u5B57\u7B26\u4E32\u7C7B\u578B\uFF0C\u7F16\u8BD1\u5668\u5C31\u4F1A\u629B\u51FA\u4E00\u4E2A ts(2322) \u7684\u9519\u8BEF\u3002 </p><p data-nodeid="36938"> \u540C\u7406\uFF0C\u5982\u679C\u6211\u4EEC\u5C06\u51FD\u6570\u7684\u53C2\u6570\u4F20\u5165\u4E86\u5B57\u7B26\u4E32\u7C7B\u578B\uFF0C\u7F16\u8BD1\u5668\u4E5F\u4F1A\u629B\u51FA\u4E00\u4E2A ts(2345) \u7684\u9519\u8BEF\u3002 </p><p data-nodeid="36939"><strong data-nodeid="37098">\u8FD9\u91CC\u8BF7\u6CE8\u610F\uFF1A\u51FD\u6570\u7684\u9ED8\u8BA4\u53C2\u6570\u7C7B\u578B\u5FC5\u987B\u662F\u53C2\u6570\u7C7B\u578B\u7684\u5B50\u7C7B\u578B</strong>\uFF0C\u4E0B\u9762\u6211\u4EEC\u770B\u4E00\u4E0B\u5982\u4E0B\u5177\u4F53\u793A\u4F8B\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">log3</span>(<span class="hljs-params">x: <span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span> = &#39;hello&#39;</span>) </span>{
</div></li><li><div class="code-word">    <span class="hljs-built_in">console</span>.log(x);
</div></li><li><div class="code-word">}
</div></li></ol></code></pre></div><p data-nodeid="36941"> \u5728\u4E0A\u8FF0\u4EE3\u7801\u4E2D\uFF0C\u51FD\u6570 log3 \u7684\u51FD\u6570\u53C2\u6570 x \u7684\u7C7B\u578B\u4E3A\u53EF\u9009\u7684\u8054\u5408\u7C7B\u578B number | string\uFF0C\u4F46\u662F\u56E0\u4E3A\u9ED8\u8BA4\u53C2\u6570\u5B57\u7B26\u4E32\u7C7B\u578B\u662F\u8054\u5408\u7C7B\u578B number | string \u7684\u5B50\u7C7B\u578B\uFF0C\u6240\u4EE5 TypeScript \u4E5F\u4F1A\u68C0\u67E5\u901A\u8FC7\u3002 </p><h4 data-nodeid="36942">\u5269\u4F59\u53C2\u6570</h4><p data-nodeid="36943"> \u5728 ES6 \u4E2D\uFF0CJavaScript \u652F\u6301\u51FD\u6570\u53C2\u6570\u7684\u5269\u4F59\u53C2\u6570\uFF0C\u5B83\u53EF\u4EE5\u628A\u591A\u4E2A\u53C2\u6570\u6536\u96C6\u5230\u4E00\u4E2A\u53D8\u91CF\u4E2D\u3002\u540C\u6837\uFF0C\u5728TypeScript \u4E2D\u4E5F\u652F\u6301\u8FD9\u6837\u7684\u53C2\u6570\u7C7B\u578B\u5B9A\u4E49\uFF0C\u5982\u4E0B\u4EE3\u7801\u6240\u793A\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sum</span>(<span class="hljs-params">...nums: <span class="hljs-built_in">number</span>[]</span>) </span>{
</div></li><li><div class="code-word">    <span class="hljs-keyword">return</span> nums.reduce(<span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> a + b, <span class="hljs-number">0</span>);
</div></li><li><div class="code-word">}
</div></li><li><div class="code-word">sum(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>); <span class="hljs-comment">// =&gt; 3</span>
</div></li><li><div class="code-word">sum(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>); <span class="hljs-comment">// =&gt; 6</span>
</div></li><li><div class="code-word">sum(<span class="hljs-number">1</span>, <span class="hljs-string">&#39;2&#39;</span>); <span class="hljs-comment">// ts(2345) Argument of type &#39;string&#39; is not assignable to parameter of type &#39;number&#39;</span>
</div></li></ol></code></pre></div><p data-nodeid="36945"> \u5728\u4E0A\u8FF0\u4EE3\u7801\u4E2D\uFF0Csum \u662F\u4E00\u4E2A\u6C42\u548C\u7684\u51FD\u6570\uFF0C<code data-backticks="1" data-nodeid="37103">...nums</code>\u5C06\u51FD\u6570\u7684\u6240\u6709\u53C2\u6570\u6536\u96C6\u5230\u4E86\u53D8\u91CF nums \u4E2D\uFF0C\u800C nums \u7684\u7C7B\u578B\u5E94\u8BE5\u662F number[]\uFF0C\u8868\u793A\u6240\u6709\u88AB\u6C42\u548C\u7684\u53C2\u6570\u662F\u6570\u5B57\u7C7B\u578B\u3002\u56E0\u6B64\uFF0Csum(1, &#39;2&#39;) \u629B\u51FA\u4E86\u4E00\u4E2A ts(2345) \u7684\u9519\u8BEF\uFF0C\u56E0\u4E3A\u53C2\u6570 &#39;2&#39; \u5E76\u4E0D\u662F number \u7C7B\u578B\u3002 </p><p data-nodeid="36946"> \u5982\u679C\u6211\u4EEC\u5C06\u51FD\u6570\u53C2\u6570 nums \u805A\u5408\u7684\u7C7B\u578B\u5B9A\u4E49\u4E3A (number | string)[]\uFF0C\u5982\u4E0B\u4EE3\u7801\u6240\u793A\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sum</span>(<span class="hljs-params">...nums: (<span class="hljs-built_in">number</span> | <span class="hljs-built_in">string</span>)[]</span>): <span class="hljs-title">number</span> </span>{
</div></li><li><div class="code-word">    <span class="hljs-keyword">return</span> nums.reduce&lt;<span class="hljs-built_in">number</span>&gt;<span class="hljs-function">(<span class="hljs-params">(<span class="hljs-params">a, b</span>) =&gt; a + <span class="hljs-built_in">Number</span>(<span class="hljs-params">b</span>), 0</span>);
</span></div></li><li><div class="code-word">}
</div></li><li><div class="code-word"><span class="hljs-params">sum</span>(<span class="hljs-params">1, &#39;2&#39;, 3</span>); // 6
</div></li></ol></code></pre></div><p data-nodeid="36948"> \u90A3\u4E48\uFF0C\u51FD\u6570\u7684\u6BCF\u4E00\u4E2A\u53C2\u6570\u7684\u7C7B\u578B\u5C31\u662F\u8054\u5408\u7C7B\u578B number | string\uFF0C\u56E0\u6B64 sum(1, &#39;2&#39;, 3) \u7684\u7C7B\u578B\u68C0\u67E5\u4E5F\u5C31\u901A\u8FC7\u4E86\u3002 </p><p data-nodeid="36949"> \u4ECB\u7ECD\u5B8C\u51FD\u6570\u7684\u53C2\u6570\uFF0C\u6211\u4EEC\u518D\u6765\u4E86\u89E3\u4E00\u4E0B\u51FD\u6570\u4E2D\u53E6\u5916\u4E00\u4E2A\u91CD\u8981\u7684\u77E5\u8BC6\u70B9 this\u3002 </p><h3 data-nodeid="40239" class="">this</h3><p data-nodeid="36951"> \u4F17\u6240\u5468\u77E5\uFF0C\u5728 JavaScript \u4E2D\uFF0C\u51FD\u6570 this \u7684\u6307\u5411\u4E00\u76F4\u662F\u4E00\u4E2A\u4EE4\u4EBA\u5934\u75DB\u7684\u95EE\u9898\u3002\u56E0\u4E3A this \u7684\u503C\u9700\u8981\u7B49\u5230\u51FD\u6570\u88AB\u8C03\u7528\u65F6\u624D\u80FD\u88AB\u786E\u5B9A\uFF0C\u66F4\u522B\u8BF4\u901A\u8FC7\u4E00\u4E9B\u65B9\u6CD5\u8FD8\u53EF\u4EE5\u6539\u53D8 this \u7684\u6307\u5411\u3002\u4E5F\u5C31\u662F\u8BF4 this \u7684\u7C7B\u578B\u4E0D\u56FA\u5B9A\uFF0C\u5B83\u53D6\u51B3\u4E8E\u6267\u884C\u65F6\u7684\u4E0A\u4E0B\u6587\u3002 </p><p data-nodeid="36952"> \u4F46\u662F\uFF0C\u4F7F\u7528\u4E86 TypeScript \u540E\uFF0C\u6211\u4EEC\u5C31\u4E0D\u7528\u62C5\u5FC3\u8FD9\u4E2A\u95EE\u9898\u4E86\u3002\u901A\u8FC7\u6307\u5B9A this \u7684\u7C7B\u578B\uFF08\u4E25\u683C\u6A21\u5F0F\u4E0B\uFF0C\u5FC5\u987B\u663E\u5F0F\u6307\u5B9A this \u7684\u7C7B\u578B\uFF09\uFF0C\u5F53\u6211\u4EEC\u9519\u8BEF\u4F7F\u7528\u4E86 this\uFF0CTypeScript \u5C31\u4F1A\u63D0\u793A\u6211\u4EEC\uFF0C\u5982\u4E0B\u4EE3\u7801\u6240\u793A\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">say</span>(<span class="hljs-params"></span>) </span>{
</div></li><li><div class="code-word">    <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.name); <span class="hljs-comment">// ts(2683) &#39;this&#39; implicitly has type &#39;any&#39; because it does not have a type annotation</span>
</div></li><li><div class="code-word">}
</div></li><li><div class="code-word">say();
</div></li></ol></code></pre></div><p data-nodeid="36954"> \u5728\u4E0A\u8FF0\u4EE3\u7801\u4E2D\uFF0C\u5982\u679C\u6211\u4EEC\u76F4\u63A5\u8C03\u7528 say \u51FD\u6570\uFF0Cthis \u5E94\u8BE5\u6307\u5411\u5168\u5C40 window \u6216 global\uFF08Node \u4E2D\uFF09\u3002\u4F46\u662F\uFF0C\u5728 strict \u6A21\u5F0F\u4E0B\u7684 TypeScript \u4E2D\uFF0C\u5B83\u4F1A\u63D0\u793A this \u7684\u7C7B\u578B\u662F any\uFF0C\u6B64\u65F6\u5C31\u9700\u8981\u6211\u4EEC\u624B\u52A8\u663E\u5F0F\u6307\u5B9A\u7C7B\u578B\u4E86\u3002 </p><p data-nodeid="36955"> \u90A3\u4E48\uFF0C\u5728 TypeScript \u4E2D\uFF0C\u6211\u4EEC\u5E94\u8BE5\u5982\u4F55\u58F0\u660E this \u7684\u7C7B\u578B\u5462\uFF1F </p><p data-nodeid="36956"> \u5728 TypeScript \u4E2D\uFF0C\u6211\u4EEC\u53EA\u9700\u8981\u5728\u51FD\u6570\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u4E2D\u58F0\u660E this \u6307\u4EE3\u7684\u5BF9\u8C61\uFF08\u5373\u51FD\u6570\u88AB\u8C03\u7528\u7684\u65B9\u5F0F\uFF09\u5373\u53EF\uFF0C\u6BD4\u5982\u6700\u7B80\u5355\u7684\u4F5C\u4E3A\u5BF9\u8C61\u7684\u65B9\u6CD5\u7684 this \u6307\u5411\uFF0C\u5982\u4E0B\u4EE3\u7801\u6240\u793A\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">say</span>(<span class="hljs-params"><span class="hljs-keyword">this</span>: Window, name: <span class="hljs-built_in">string</span></span>) </span>{
</div></li><li><div class="code-word">    <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.name);
</div></li><li><div class="code-word">}
</div></li><li><div class="code-word"><span class="hljs-built_in">window</span>.say = say;
</div></li><li><div class="code-word"><span class="hljs-built_in">window</span>.say(<span class="hljs-string">&#39;hi&#39;</span>);
</div></li><li><div class="code-word"><span class="hljs-keyword">const</span> obj = {
</div></li><li><div class="code-word">    say
</div></li><li><div class="code-word">};
</div></li><li><div class="code-word">obj.say(<span class="hljs-string">&#39;hi&#39;</span>); <span class="hljs-comment">// ts(2684) The &#39;this&#39; context of type &#39;{ say: (this: Window, name: string) =&gt; void; }&#39; is not assignable to method&#39;s &#39;this&#39; of type &#39;Window&#39;.</span>
</div></li></ol></code></pre></div><p data-nodeid="36958"> \u5728\u4E0A\u8FF0\u4EE3\u7801\u4E2D\uFF0C\u6211\u4EEC\u5728 window \u5BF9\u8C61\u4E0A\u589E\u52A0 say \u7684\u5C5E\u6027\u4E3A\u51FD\u6570 say\u3002\u90A3\u4E48\u8C03\u7528<code data-backticks="1" data-nodeid="37136">window.say()</code>\u65F6\uFF0Cthis \u6307\u5411\u5373\u4E3A window \u5BF9\u8C61\u3002 </p><p data-nodeid="36959"> \u8C03\u7528<code data-backticks="1" data-nodeid="37139">obj.say()</code>\u540E\uFF0C\u6B64\u65F6 TypeScript \u68C0\u6D4B\u5230 this \u7684\u6307\u5411\u4E0D\u662F window\uFF0C\u4E8E\u662F\u629B\u51FA\u4E86\u5982\u4E0B\u6240\u793A\u7684\u4E00\u4E2A ts(2684) \u9519\u8BEF\u3002 </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word">say(<span class="hljs-string">&#39;captain&#39;</span>); <span class="hljs-comment">// ts(2684) The &#39;this&#39; context of type &#39;void&#39; is not assignable to method&#39;s &#39;this&#39; of type &#39;Window&#39;</span>
</div></li></ol></code></pre></div><p data-nodeid="36961"><strong data-nodeid="37144">\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u5982\u679C\u6211\u4EEC\u76F4\u63A5\u8C03\u7528 say()\uFF0Cthis \u5B9E\u9645\u4E0A\u5E94\u8BE5\u6307\u5411\u5168\u5C40\u53D8\u91CF window\uFF0C\u4F46\u662F\u56E0\u4E3A TypeScript \u65E0\u6CD5\u786E\u5B9A say \u51FD\u6570\u88AB\u8C01\u8C03\u7528\uFF0C\u6240\u4EE5\u5C06 this \u7684\u6307\u5411\u9ED8\u8BA4\u4E3A void\uFF0C\u4E5F\u5C31\u63D0\u793A\u4E86\u4E00\u4E2A ts(2684) \u9519\u8BEF\u3002</strong></p><p data-nodeid="36962"> \u6B64\u65F6\uFF0C\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7\u8C03\u7528 window.say() \u6765\u907F\u514D\u8FD9\u4E2A\u9519\u8BEF\uFF0C\u8FD9\u4E5F\u662F\u4E00\u4E2A\u5B89\u5168\u7684\u8BBE\u8BA1\u3002\u56E0\u4E3A\u5728 JavaScript \u7684\u4E25\u683C\u6A21\u5F0F\u4E0B\uFF0C\u5168\u5C40\u4F5C\u7528\u57DF\u51FD\u6570\u4E2D this \u7684\u6307\u5411\u662F undefined\u3002 </p><p data-nodeid="36963"><strong data-nodeid="37149">\u540C\u6837\uFF0C\u5B9A\u4E49\u5BF9\u8C61\u7684\u51FD\u6570\u5C5E\u6027\u65F6\uFF0C\u53EA\u8981\u5B9E\u9645\u8C03\u7528\u4E2D this \u7684\u6307\u5411\u4E0E\u6307\u5B9A\u7684 this \u6307\u5411\u4E0D\u540C\uFF0CTypeScript \u5C31\u80FD\u53D1\u73B0 this \u6307\u5411\u7684\u9519\u8BEF\uFF0C\u793A\u4F8B\u4EE3\u7801\u5982\u4E0B\uFF1A</strong></p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-keyword">interface</span> Person {
</div></li><li><div class="code-word">    name: <span class="hljs-built_in">string</span>;
</div></li><li><div class="code-word">    say(<span class="hljs-keyword">this</span>: Person): <span class="hljs-built_in">void</span>;
</div></li><li><div class="code-word">}
</div></li><li><div class="code-word"><span class="hljs-keyword">const</span> person: Person = {
</div></li><li><div class="code-word">    name: <span class="hljs-string">&#39;captain&#39;</span>,
</div></li><li><div class="code-word">    say() {
</div></li><li><div class="code-word">        <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.name);
</div></li><li><div class="code-word">    },
</div></li><li><div class="code-word">};
</div></li><li><div class="code-word"><span class="hljs-keyword">const</span> fn = person.say;
</div></li><li><div class="code-word">fn(); <span class="hljs-comment">// ts(2684) The &#39;this&#39; context of type &#39;void&#39; is not assignable to method&#39;s &#39;this&#39; of type &#39;Person&#39;</span>
</div></li></ol></code></pre></div><p data-nodeid="36965"><strong data-nodeid="37153">\u6CE8\u610F\uFF1A\u663E\u5F0F\u6CE8\u89E3\u51FD\u6570\u4E2D\u7684 this \u7C7B\u578B\uFF0C\u5B83\u8868\u9762\u4E0A\u5360\u636E\u4E86\u7B2C\u4E00\u4E2A\u5F62\u53C2\u7684\u4F4D\u7F6E\uFF0C\u4F46\u5E76\u4E0D\u610F\u5473\u7740\u51FD\u6570\u771F\u7684\u591A\u4E86\u4E00\u4E2A\u53C2\u6570\uFF0C\u56E0\u4E3A TypeScript \u8F6C\u8BD1\u4E3A JavaScript \u540E\uFF0C\u201C\u4F2A\u5F62\u53C2\u201D this \u4F1A\u88AB\u62B9\u6389\uFF0C\u8FD9\u7B97\u662F TypeScript \u4E3A\u6570\u4E0D\u591A\u7684\u7279\u6709\u8BED\u6CD5\u3002</strong></p><p data-nodeid="36966"> \u5F53\u7136\uFF0C\u521D\u6B21\u63A5\u89E6\u8FD9\u4E2A\u7279\u6027\u65F6\u8BA9\u4EBA\u8D39\u89E3\uFF0C\u8FD9\u5C31\u9700\u8981\u6211\u4EEC\u628A\u5B83\u94ED\u8BB0\u4E8E\u5FC3\u3002\u524D\u8FB9\u7684 say \u51FD\u6570\u8F6C\u8BD1\u4E3A JavaScript \u540E\uFF0Cthis \u5C31\u4F1A\u88AB\u62B9\u6389\uFF0C\u5982\u4E0B\u4EE3\u7801\u6240\u793A\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">say</span>(<span class="hljs-params">name</span>) </span>{
</div></li><li><div class="code-word">    <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.name);
</div></li><li><div class="code-word">}
</div></li></ol></code></pre></div><p data-nodeid="36968"> \u540C\u6837\uFF0C\u6211\u4EEC\u4E5F\u53EF\u4EE5\u663E\u5F0F\u9650\u5B9A\u7C7B\uFF08class \u7C7B\u7684\u4ECB\u7ECD\u8BE6\u89C1 06 \u8BB2\uFF09\u51FD\u6570\u5C5E\u6027\u4E2D\u7684 this \u7C7B\u578B\uFF0CTypeScript \u4E5F\u80FD\u68C0\u67E5\u51FA\u9519\u8BEF\u7684\u4F7F\u7528\u65B9\u5F0F\uFF0C\u5982\u4E0B\u4EE3\u7801\u6240\u793A\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-keyword">class</span> Component {
</div></li><li><div class="code-word">  onClick(<span class="hljs-keyword">this</span>: Component) {}
</div></li><li><div class="code-word">}
</div></li><li><div class="code-word"><span class="hljs-keyword">const</span> component = <span class="hljs-keyword">new</span> Component();
</div></li><li><div class="code-word"><span class="hljs-keyword">interface</span> UI {
</div></li><li><div class="code-word">  addClickListener(onClick: <span class="hljs-function">(<span class="hljs-params"><span class="hljs-keyword">this</span>: <span class="hljs-built_in">void</span></span>) =&gt;</span> <span class="hljs-built_in">void</span>): <span class="hljs-built_in">void</span>;
</div></li><li><div class="code-word">}
</div></li><li><div class="code-word"><span class="hljs-keyword">const</span> ui: UI = {
</div></li><li><div class="code-word">  addClickListener() {}
</div></li><li><div class="code-word">};
</div></li><li><div class="code-word">ui.addClickListener(<span class="hljs-keyword">new</span> Component().onClick); <span class="hljs-comment">// ts(2345)</span>
</div></li></ol></code></pre></div><p data-nodeid="36970"> \u4E0A\u9762\u793A\u4F8B\u4E2D\uFF0C\u6211\u4EEC\u5B9A\u4E49\u7684 Component \u7C7B\u7684 onClick \u51FD\u6570\u5C5E\u6027\uFF08\u65B9\u6CD5\uFF09\u663E\u5F0F\u6307\u5B9A\u4E86 this \u7C7B\u578B\u662F Component\uFF0C\u5728\u7B2C 14 \u884C\u4F5C\u4E3A\u5165\u53C2\u4F20\u9012\u7ED9 ui \u7684 addClickListener \u65B9\u6CD5\u4E2D\uFF0C\u5B83\u6307\u5B9A\u7684 this \u7C7B\u578B\u662F void\uFF0C\u4E24\u4E2A this \u7C7B\u578B\u4E0D\u5339\u914D\uFF0C\u6240\u4EE5\u629B\u51FA\u4E86\u4E00\u4E2A ts(2345) \u9519\u8BEF\u3002 </p><p data-nodeid="36971"> \u6B64\u5916\uFF0C\u5728\u94FE\u5F0F\u8C03\u7528\u98CE\u683C\u7684\u5E93\u4E2D\uFF0C\u4F7F\u7528 this \u4E5F\u53EF\u4EE5\u5F88\u65B9\u4FBF\u5730\u8868\u8FBE\u51FA\u5176\u7C7B\u578B\uFF0C\u5982\u4E0B\u4EE3\u7801\u6240\u793A\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-keyword">class</span> Container {
</div></li><li><div class="code-word">  <span class="hljs-keyword">private</span> val: <span class="hljs-built_in">number</span>;
</div></li><li><div class="code-word">  <span class="hljs-keyword">constructor</span>(<span class="hljs-params">val: <span class="hljs-built_in">number</span></span>) {
</div></li><li><div class="code-word">    <span class="hljs-keyword">this</span>.val = val;
</div></li><li><div class="code-word">  }
</div></li><li><div class="code-word">  map(cb: <span class="hljs-function">(<span class="hljs-params">x: <span class="hljs-built_in">number</span></span>) =&gt;</span> <span class="hljs-built_in">number</span>): <span class="hljs-keyword">this</span> {
</div></li><li><div class="code-word">    <span class="hljs-keyword">this</span>.val = cb(<span class="hljs-keyword">this</span>.val);
</div></li><li><div class="code-word">    <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>;
</div></li><li><div class="code-word">  }
</div></li><li><div class="code-word">  log(): <span class="hljs-keyword">this</span> {
</div></li><li><div class="code-word">    <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.val);
</div></li><li><div class="code-word">    <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>;
</div></li><li><div class="code-word">  }
</div></li><li><div class="code-word">}
</div></li><li><div class="code-word"><span class="hljs-keyword">const</span> instance = <span class="hljs-keyword">new</span> Container(<span class="hljs-number">1</span>)
</div></li><li><div class="code-word">  .map(<span class="hljs-function">(<span class="hljs-params">x</span>) =&gt;</span> x + <span class="hljs-number">1</span>)
</div></li><li><div class="code-word">  .log() <span class="hljs-comment">// =&gt; 2</span>
</div></li><li><div class="code-word">  .map(<span class="hljs-function">(<span class="hljs-params">x</span>) =&gt;</span> x * <span class="hljs-number">3</span>)
</div></li><li><div class="code-word">  .log(); <span class="hljs-comment">// =&gt; 6  </span>
</div></li></ol></code></pre></div><p data-nodeid="36973"> \u56E0\u4E3A Container \u7C7B\u4E2D map\u3001log \u7B49\u51FD\u6570\u5C5E\u6027\uFF08\u65B9\u6CD5\uFF09\u672A\u663E\u5F0F\u6307\u5B9A this \u7C7B\u578B\uFF0C\u9ED8\u8BA4\u7C7B\u578B\u662F Container\uFF0C\u6240\u4EE5\u4EE5\u4E0A\u65B9\u6CD5\u5728\u88AB\u8C03\u7528\u65F6\u8FD4\u56DE\u7684\u7C7B\u578B\u4E5F\u662F Container\uFF0Cthis \u6307\u5411\u4E00\u76F4\u662F\u7C7B\u7684\u5B9E\u4F8B\uFF0C\u5B83\u53EF\u4EE5\u4E00\u76F4\u65E0\u9650\u5730\u88AB\u94FE\u5F0F\u8C03\u7528\u3002 </p><p data-nodeid="36974"> \u4ECB\u7ECD\u5B8C\u51FD\u6570\u4E2D this \u7684\u6307\u5411\u548C\u7C7B\u578B\u540E\uFF0C\u6211\u4EEC\u518D\u6765\u4E86\u89E3\u4E00\u4E0B\u5B83\u7684\u53E6\u5916\u4E00\u4E2A\u7279\u6027\u51FD\u6570\u591A\u6001\uFF08\u51FD\u6570\u91CD\u8F7D\uFF09\u3002 </p><h3 data-nodeid="42652" class="">\u51FD\u6570\u91CD\u8F7D</h3><p data-nodeid="36976"> JavaScript \u662F\u4E00\u95E8\u52A8\u6001\u8BED\u8A00\uFF0C\u9488\u5BF9\u540C\u4E00\u4E2A\u51FD\u6570\uFF0C\u5B83\u53EF\u4EE5\u6709\u591A\u79CD\u4E0D\u540C\u7C7B\u578B\u7684\u53C2\u6570\u4E0E\u8FD4\u56DE\u503C\uFF0C\u8FD9\u5C31\u662F\u51FD\u6570\u7684\u591A\u6001\u3002 </p><p data-nodeid="36977"> \u800C\u5728 TypeScript \u4E2D\uFF0C\u4E5F\u53EF\u4EE5\u76F8\u5E94\u5730\u8868\u8FBE\u4E0D\u540C\u7C7B\u578B\u7684\u53C2\u6570\u548C\u8FD4\u56DE\u503C\u7684\u51FD\u6570\uFF0C\u5982\u4E0B\u4EE3\u7801\u6240\u793A\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">convert</span>(<span class="hljs-params">x: <span class="hljs-built_in">string</span> | <span class="hljs-built_in">number</span> | <span class="hljs-literal">null</span></span>): <span class="hljs-title">string</span> | <span class="hljs-title">number</span> | -1 </span>{
</div></li><li><div class="code-word">    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> x === <span class="hljs-string">&#39;string&#39;</span>) {
</div></li><li><div class="code-word">        <span class="hljs-keyword">return</span> <span class="hljs-built_in">Number</span>(x);
</div></li><li><div class="code-word">    }
</div></li><li><div class="code-word">    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> x === <span class="hljs-string">&#39;number&#39;</span>) {
</div></li><li><div class="code-word">        <span class="hljs-keyword">return</span> <span class="hljs-built_in">String</span>(x);
</div></li><li><div class="code-word">    }
</div></li><li><div class="code-word">    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;
</div></li><li><div class="code-word">}
</div></li><li><div class="code-word"><span class="hljs-keyword">const</span> x1 = convert(<span class="hljs-string">&#39;1&#39;</span>); <span class="hljs-comment">// =&gt; string | number</span>
</div></li><li><div class="code-word"><span class="hljs-keyword">const</span> x2 = convert(<span class="hljs-number">1</span>); <span class="hljs-comment">// =&gt; string | number</span>
</div></li><li><div class="code-word"><span class="hljs-keyword">const</span> x3 = convert(<span class="hljs-literal">null</span>); <span class="hljs-comment">// =&gt; string | number</span>
</div></li></ol></code></pre></div><p data-nodeid="36979"> \u5728\u4E0A\u8FF0\u4EE3\u7801\u4E2D\uFF0C\u6211\u4EEC\u628A convert \u51FD\u6570\u7684 string \u7C7B\u578B\u7684\u503C\u8F6C\u6362\u4E3A number \u7C7B\u578B\uFF0Cnumber \u7C7B\u578B\u8F6C\u6362\u4E3A string \u7C7B\u578B\uFF0C\u800C\u5C06 null \u7C7B\u578B\u8F6C\u6362\u4E3A\u6570\u5B57 -1\u3002\u6B64\u65F6\uFF0C x1\u3001x2\u3001x3 \u7684\u8FD4\u56DE\u503C\u7C7B\u578B\u90FD\u4F1A\u88AB\u63A8\u65AD\u6210 string | number \u3002 </p><p data-nodeid="36980"> \u90A3\u4E48\uFF0C\u6709\u6CA1\u6709\u4E00\u79CD\u529E\u6CD5\u53EF\u4EE5\u66F4\u7CBE\u786E\u5730\u63CF\u8FF0\u53C2\u6570\u4E0E\u8FD4\u56DE\u503C\u7C7B\u578B\u7EA6\u675F\u5173\u7CFB\u7684\u51FD\u6570\u7C7B\u578B\u5462\uFF1F\u6709\uFF0C\u8FD9\u5C31\u662F\u51FD\u6570\u91CD\u8F7D\uFF08Function Overload\uFF09\uFF0C\u5982\u4E0B\u793A\u4F8B\u4E2D 1~3 \u884C\u5B9A\u4E49\u4E86\u4E09\u79CD\u5404\u4E0D\u76F8\u540C\u7684\u51FD\u6570\u7C7B\u578B\u5217\u8868\uFF0C\u5E76\u63CF\u8FF0\u4E86\u4E0D\u540C\u7684\u53C2\u6570\u7C7B\u578B\u5BF9\u5E94\u4E0D\u540C\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\uFF0C\u800C\u4ECE\u7B2C 4 \u884C\u5F00\u59CB\u624D\u662F\u51FD\u6570\u7684\u5B9E\u73B0\u3002 </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">convert</span>(<span class="hljs-params">x: <span class="hljs-built_in">string</span></span>): <span class="hljs-title">number</span></span>;
</div></li><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">convert</span>(<span class="hljs-params">x: <span class="hljs-built_in">number</span></span>): <span class="hljs-title">string</span></span>;
</div></li><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">convert</span>(<span class="hljs-params">x: <span class="hljs-literal">null</span></span>): -1</span>;
</div></li><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">convert</span>(<span class="hljs-params">x: <span class="hljs-built_in">string</span> | <span class="hljs-built_in">number</span> | <span class="hljs-literal">null</span></span>): <span class="hljs-title">any</span> </span>{
</div></li><li><div class="code-word">    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> x === <span class="hljs-string">&#39;string&#39;</span>) {
</div></li><li><div class="code-word">        <span class="hljs-keyword">return</span> <span class="hljs-built_in">Number</span>(x);
</div></li><li><div class="code-word">    }
</div></li><li><div class="code-word">    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> x === <span class="hljs-string">&#39;number&#39;</span>) {
</div></li><li><div class="code-word">        <span class="hljs-keyword">return</span> <span class="hljs-built_in">String</span>(x);
</div></li><li><div class="code-word">    }
</div></li><li><div class="code-word">    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;
</div></li><li><div class="code-word">}
</div></li><li><div class="code-word"><span class="hljs-keyword">const</span> x1 = convert(<span class="hljs-string">&#39;1&#39;</span>); <span class="hljs-comment">// =&gt; number</span>
</div></li><li><div class="code-word"><span class="hljs-keyword">const</span> x2 = convert(<span class="hljs-number">1</span>); <span class="hljs-comment">// =&gt; string</span>
</div></li><li><div class="code-word"><span class="hljs-keyword">const</span> x3 = convert(<span class="hljs-literal">null</span>); <span class="hljs-comment">// -1</span>
</div></li></ol></code></pre></div><blockquote data-nodeid="36982"><p data-nodeid="36983"> \u6CE8\u610F\uFF1A\u51FD\u6570\u91CD\u8F7D\u5217\u8868\u7684\u5404\u4E2A\u6210\u5458\uFF08\u5373\u793A\u4F8B\u4E2D\u7684 1 ~ 3 \u884C\uFF09\u5FC5\u987B\u662F\u51FD\u6570\u5B9E\u73B0\uFF08\u5373\u793A\u4F8B\u4E2D\u7684\u7B2C 4 \u884C\uFF09\u7684\u5B50\u96C6\uFF0C\u4F8B\u5982 \u201Cfunction convert(x: string): number\u201D\u662F\u201Cfunction convert(x: string | number | null): any\u201D\u7684\u5B50\u96C6\u3002 </p></blockquote><p data-nodeid="36984"> \u5728 convert \u51FD\u6570\u88AB\u8C03\u7528\u65F6\uFF0CTypeScript \u4F1A\u4ECE\u4E0A\u5230\u4E0B\u67E5\u627E\u51FD\u6570\u91CD\u8F7D\u5217\u8868\u4E2D\u4E0E\u5165\u53C2\u7C7B\u578B\u5339\u914D\u7684\u7C7B\u578B\uFF0C\u5E76\u4F18\u5148\u4F7F\u7528\u7B2C\u4E00\u4E2A\u5339\u914D\u7684\u91CD\u8F7D\u5B9A\u4E49\u3002\u56E0\u6B64\uFF0C\u6211\u4EEC\u9700\u8981\u628A\u6700\u7CBE\u786E\u7684\u51FD\u6570\u91CD\u8F7D\u653E\u5230\u524D\u9762\u3002\u4F8B\u5982\u6211\u4EEC\u5728\u7B2C 14 \u884C\u4F20\u5165\u4E86\u5B57\u7B26\u4E32 &#39;1&#39;\uFF0C\u67E5\u627E\u5230\u7B2C 1 \u884C\u5373\u5339\u914D\uFF0C\u800C\u7B2C 15 \u884C\u4F20\u5165\u4E86\u6570\u5B57 1\uFF0C\u5219\u67E5\u627E\u5230\u7B2C 2 \u884C\u5339\u914D\u3002 </p><p data-nodeid="43250" class="te-preview-highlight"><strong data-nodeid="43255">\u4E3A\u4E86\u65B9\u4FBF\u4F60\u7406\u89E3\u8FD9\u90E8\u5206\u5185\u5BB9\uFF0C</strong> \u4E0B\u9762\u6211\u4EEC\u901A\u8FC7\u4EE5\u4E0B\u4E00\u4E2A\u793A\u4F8B\u8FDB\u884C\u5177\u4F53\u8BF4\u660E\u3002 </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-keyword">interface</span> P1 {
</div></li><li><div class="code-word">    name: <span class="hljs-built_in">string</span>;
</div></li><li><div class="code-word">}
</div></li><li><div class="code-word"><span class="hljs-keyword">interface</span> P2 <span class="hljs-keyword">extends</span> P1 {
</div></li><li><div class="code-word">    age: <span class="hljs-built_in">number</span>;
</div></li><li><div class="code-word">}
</div></li><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">convert</span>(<span class="hljs-params">x: P1</span>): <span class="hljs-title">number</span></span>;
</div></li><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">convert</span>(<span class="hljs-params">x: P2</span>): <span class="hljs-title">string</span></span>;
</div></li><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">convert</span>(<span class="hljs-params">x: P1 | P2</span>): <span class="hljs-title">any</span> </span>{}
</div></li><li><div class="code-word"><span class="hljs-keyword">const</span> x1 = convert({ name: <span class="hljs-string">&quot;&quot;</span> } <span class="hljs-keyword">as</span> P1); <span class="hljs-comment">// =&gt; number</span>
</div></li><li><div class="code-word"><span class="hljs-keyword">const</span> x2 = convert({ name: <span class="hljs-string">&quot;&quot;</span>, age: <span class="hljs-number">18</span> } <span class="hljs-keyword">as</span> P2); <span class="hljs-comment">// number</span>
</div></li></ol></code></pre></div><p data-nodeid="36987"> \u56E0\u4E3A P2 \u7EE7\u627F\u81EA P1\uFF0C\u6240\u4EE5\u7C7B\u578B\u4E3A P2 \u7684\u53C2\u6570\u4F1A\u548C\u7C7B\u578B\u4E3A P1 \u7684\u53C2\u6570\u4E00\u6837\u5339\u914D\u5230\u7B2C\u4E00\u4E2A\u51FD\u6570\u91CD\u8F7D\uFF0C\u6B64\u65F6 x1\u3001x2 \u7684\u8FD4\u56DE\u503C\u90FD\u662F number\u3002 </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">convert</span>(<span class="hljs-params">x: P2</span>): <span class="hljs-title">string</span></span>;
</div></li><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">convert</span>(<span class="hljs-params">x: P1</span>): <span class="hljs-title">number</span></span>;
</div></li><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">convert</span>(<span class="hljs-params">x: P1 | P2</span>): <span class="hljs-title">any</span> </span>{ }
</div></li><li><div class="code-word"><span class="hljs-keyword">const</span> x1 = convert({ name: <span class="hljs-string">&#39;&#39;</span> } <span class="hljs-keyword">as</span> P1); <span class="hljs-comment">// =&gt; number</span>
</div></li><li><div class="code-word"><span class="hljs-keyword">const</span> x2 = convert({ name: <span class="hljs-string">&#39;&#39;</span>, age: <span class="hljs-number">18</span> } <span class="hljs-keyword">as</span> P2); <span class="hljs-comment">// =&gt; string</span>
</div></li></ol></code></pre></div><p data-nodeid="36989"> \u800C\u6211\u4EEC\u53EA\u9700\u8981\u5C06\u51FD\u6570\u91CD\u8F7D\u5217\u8868\u7684\u987A\u5E8F\u8C03\u6362\u4E00\u4E0B\uFF0C\u7C7B\u578B\u4E3A P2 \u548C P1 \u7684\u53C2\u6570\u5C31\u53EF\u4EE5\u5206\u522B\u5339\u914D\u5230\u6B63\u786E\u7684\u51FD\u6570\u91CD\u8F7D\u4E86\uFF0C\u4F8B\u5982\u7B2C 5 \u884C\u5339\u914D\u5230\u7B2C 2 \u884C\uFF0C\u7B2C 6 \u884C\u5339\u914D\u5230\u7B2C 1 \u884C\u3002 </p><h3 data-nodeid="36990">\u7C7B\u578B\u8C13\u8BCD\uFF08is\uFF09</h3><p data-nodeid="36991"> \u5728 TypeScript \u4E2D\uFF0C\u51FD\u6570\u8FD8\u652F\u6301\u53E6\u5916\u4E00\u79CD\u7279\u6B8A\u7684\u7C7B\u578B\u63CF\u8FF0\uFF0C\u5982\u4E0B\u793A\u4F8B \uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="typescript"><ol><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span>\xA0<span class="hljs-title">isString</span>(<span class="hljs-params">s</span>):\xA0<span class="hljs-title">s</span>\xA0<span class="hljs-title">is</span>\xA0<span class="hljs-title">string</span>\xA0</span>{ <span class="hljs-comment">// \u7C7B\u578B\u8C13\u8BCD</span>
</div></li><li><div class="code-word">\xA0\xA0<span class="hljs-keyword">return</span>\xA0<span class="hljs-keyword">typeof</span>\xA0s\xA0===\xA0<span class="hljs-string">&#39;string&#39;</span>;
</div></li><li><div class="code-word">}
</div></li><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span>\xA0<span class="hljs-title">isNumber</span>(<span class="hljs-params">n:\xA0<span class="hljs-built_in">number</span></span>)\xA0</span>{
</div></li><li><div class="code-word">\xA0\xA0<span class="hljs-keyword">return</span>\xA0<span class="hljs-keyword">typeof</span>\xA0n\xA0===\xA0<span class="hljs-string">&#39;number&#39;</span>;
</div></li><li><div class="code-word">}
</div></li><li><div class="code-word"><span class="hljs-function"><span class="hljs-keyword">function</span>\xA0<span class="hljs-title">operator</span>(<span class="hljs-params">x:\xA0unknown</span>)\xA0</span>{
</div></li><li><div class="code-word">\xA0\xA0<span class="hljs-keyword">if</span>(isString(x))\xA0{\xA0<span class="hljs-comment">//\xA0ok\xA0x\xA0\u7C7B\u578B\u7F29\u5C0F\u4E3A\xA0string</span>
</div></li><li><div class="code-word">\xA0\xA0}
</div></li><li><div class="code-word">\xA0\xA0<span class="hljs-keyword">if</span>\xA0(isNumber(x))\xA0{\xA0<span class="hljs-comment">//\xA0ts(2345)\xA0unknown\xA0\u4E0D\u80FD\u8D4B\u503C\u7ED9\xA0number</span>
</div></li><li><div class="code-word">\xA0\xA0}
</div></li><li><div class="code-word">}
</div></li></ol></code></pre></div><p data-nodeid="36993"> \u5728\u4E0A\u8FF0\u4EE3\u7801\u4E2D\uFF0C\u5728\u6DFB\u52A0\u8FD4\u56DE\u503C\u7C7B\u578B\u7684\u5730\u65B9\uFF0C\u6211\u4EEC\u901A\u8FC7\u201C\u53C2\u6570\u540D + is + \u7C7B\u578B\u201D\u7684\u683C\u5F0F\u660E\u786E\u8868\u660E\u4E86\u53C2\u6570\u7684\u7C7B\u578B\uFF0C\u8FDB\u800C\u5F15\u8D77\u7C7B\u578B\u7F29\u5C0F\uFF0C\u6240\u4EE5\u7C7B\u578B\u8C13\u8BCD\u51FD\u6570\u7684\u4E00\u4E2A\u91CD\u8981\u7684\u5E94\u7528\u573A\u666F\u662F\u5B9E\u73B0\u81EA\u5B9A\u4E49\u7C7B\u578B\u5B88\u536B\uFF08\u8BE6\u89C1\u7B2C 11 \u8BB2\uFF09\u3002 </p><h3 data-nodeid="36994">\u5C0F\u7ED3\u4E0E\u9884\u544A</h3><p data-nodeid="36995"> \u51FD\u6570\u662F JavaScript \u548C TypeScript \u4E2D\u6781\u5176\u91CD\u8981\u7684\u57FA\u7840\u90E8\u5206\uFF0C\u65E0\u8BBA\u662F\u9762\u5411\u8FC7\u7A0B\uFF0C\u8FD8\u662F\u9762\u5411\u5BF9\u8C61\u7F16\u7A0B\uFF0C\u90FD\u79BB\u4E0D\u5F00\u51FD\u6570\u7684\u62BD\u8C61\u3001\u5C01\u88C5\u3002\u9759\u6001\u7C7B\u578B\u7684\u52A0\u6301\uFF0C\u4F7F\u5F97 TypeScript \u4E2D\u7684\u51FD\u6570\u76F8\u8F83\u4E8E JavaScript \u6765\u8BF4\uFF0C\u53D8\u5F97\u66F4\u52A0\u7A33\u5B9A\u3001\u7CBE\u786E\u3001\u5B89\u5168\u3002 </p><p data-nodeid="36996"> \u8FD9\u91CC\u63D2\u64AD\u4E00\u4E2A\u601D\u8003\u9898\uFF1A\u5982\u4F55\u6CE8\u89E3\u51FD\u6570\u4E2D this \u7684\u7C7B\u578B\uFF1F\u51FD\u6570\u7C7B\u578B\u91CD\u8F7D\u7684\u5339\u914D\u987A\u5E8F\u662F\u4EC0\u4E48\uFF1F\u6B22\u8FCE\u4F60\u5728\u7559\u8A00\u533A\u4E0E\u6211\u4E92\u52A8\u3001\u4EA4\u6D41\u3002\u53E6\u5916\uFF0C\u5982\u679C\u4F60\u89C9\u5F97\u672C\u4E13\u680F\u6709\u4EF7\u503C\uFF0C\u6B22\u8FCE\u5206\u4EAB\u7ED9\u66F4\u591A\u597D\u53CB\u54E6~ </p><p data-nodeid="36997"> 06 \u8BB2\u6211\u4EEC\u5C06\u4E86\u89E3 TypeScript \u53E6\u5916\u4E00\u4E2A\u62BD\u8C61\u3001\u5C01\u88C5\u53CA\u9762\u5411\u5BF9\u8C61\u7F16\u7A0B\u7684\u5229\u5668\u2014\u2014\u7C7B\uFF0C\u656C\u8BF7\u671F\u5F85\uFF01 </p></div></div>`,1),v=[p,e,t,r];function h(j,u){return a(),n("div",o,v)}var m=d(c,[["render",h]]);export{m as default};
