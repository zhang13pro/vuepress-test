import{o as a,c as d,b as s,d as i,a as e}from"./app.60568e47.js";import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";const n={},o={"data-v-1605a430":""},t=s("h1",{"data-v-1605a430":"",class:"main-title"},"\u52A0\u9910 | \u6A21\u5757\u4E94\u601D\u8003\u9898\u89E3\u7B54",-1),r=s("div",{"data-v-1605a430":"",class:"main-tips"},[i(" 2021/06/14 "),s("span",{"data-v-1605a430":"",class:"auth"},"\u6797\u4B7D")],-1),c=s("div",{"data-v-1605a430":"",class:"media-player-wrap"},[s("div",{"data-v-6ecd2302":"","data-v-1605a430":""},[s("div",{"data-v-6ecd2302":"",class:"media-container"},[s("div",{"data-v-6ecd2302":"",class:"button-wrap inline-block"},[s("div",{"data-v-6ecd2302":"",class:"button-icon inline-block"})]),s("div",{"data-v-6ecd2302":"",class:"data-wrap inline-block"},[s("div",{"data-v-6ecd2302":"",class:"progress-bar"},[s("div",{class:"vue-slider vue-slider-ltr",style:{padding:"7px 0px",width:"auto",height:"4px"}},[s("div",{class:"vue-slider-rail",style:{height:"2px",background:"rgb(213, 218, 223)","border-radius":"1.5px"}},[s("div",{class:"vue-slider-process",style:{height:"100%",top:"0px",left:"0%",width:"0%","transition-property":"width, left","transition-duration":"0.5s",background:"rgb(252, 215, 102)"}}),s("div",{"aria-valuetext":"00:00/04:41",class:"vue-slider-dot vue-slider-dot-hover",role:"slider","aria-valuenow":"0","aria-valuemin":"0","aria-valuemax":"281","aria-orientation":"horizontal",tabindex:"0",style:{width:"14px",height:"14px",transform:"translate(-50%, -50%)",top:"50%",left:"0%",transition:"left 0.5s ease 0s"}},[s("div",{class:"vue-slider-dot-handle",style:{width:"16px",height:"16px",background:"rgb(252, 215, 102)","box-shadow":"none","margin-top":"-1px","z-index":"1"}}),s("div",{class:"vue-slider-dot-tooltip vue-slider-dot-tooltip-top"},[s("div",{class:"vue-slider-dot-tooltip-inner vue-slider-dot-tooltip-inner-top",style:{padding:"2px 12px","border-radius":"14px","font-size":"14px",color:"rgb(0, 0, 0)",background:"rgb(252, 215, 102)","min-width":"20px","border-color":"rgb(252, 215, 102)"}},[s("span",{class:"vue-slider-dot-tooltip-text"},"00:00/04:41")])])])])])]),s("div",{"data-v-6ecd2302":"",class:"detail-wrap"},[s("div",{"data-v-6ecd2302":"",class:"detail-one"},"12.23M"),s("div",{"data-v-6ecd2302":"",class:"detail-two"},"00:00/04:41")])]),s("div",{"data-v-6ecd2302":"",class:"division-line inline-block"}),s("div",{"data-v-6ecd2302":"",class:"viedo-wrap inline-block"},[s("div",{"data-v-6ecd2302":"",class:"viedo-icon"}),s("div",{"data-v-6ecd2302":"",class:"text"},"\u770B\u89C6\u9891")])])])],-1),p=e(`<div data-v-1605a430="" class="main-container"><div data-v-1605a430="" class="rich-text-wrap"><p data-nodeid="50474" class=""> \u4ECA\u5929\u6211\u4F1A\u5E26\u4F60\u628A\u300A<strong data-nodeid="50480">\u6A21\u5757\u4E94\uFF1A\u7F51\u7EDC\u5B89\u5168</strong>\u300B\u4E2D\u6D89\u53CA\u7684\u8BFE\u540E\u7EC3\u4E60\u9898\uFF0C\u9010\u4E00\u8BB2\u89E3\uFF0C\u5E76\u7ED9\u51FA\u6BCF\u4E2A\u8BFE\u65F6\u7EC3\u4E60\u9898\u7684\u89E3\u9898\u601D\u8DEF\u548C\u7B54\u6848\u3002 </p><h3 data-nodeid="50177">\u7EC3\u4E60\u9898\u8BE6\u89E3</h3><h4 data-nodeid="50178"> 19 | \u7F51\u7EDC\u5B89\u5168\u6982\u8FF0\uFF1A\u5BF9\u79F0\u3001\u975E\u5BF9\u79F0\u52A0\u5BC6\u7684\u533A\u522B\u662F\uFF1F </h4><p data-nodeid="50179"> \u3010<strong data-nodeid="50221">\u95EE\u9898</strong>\u3011\u81EA\u5DF1\u5199\u4E00\u4E2A\u7A0B\u5E8F\u5B9E\u6D4B\u4E0B\u5BF9\u79F0\u52A0\u5BC6\u548C\u975E\u5BF9\u79F0\u52A0\u5BC6\u7684\u6027\u80FD\u5DEE\u8DDD\u3002 </p><p data-nodeid="50180"> \u3010<strong data-nodeid="50227">\u89E3\u7B54</strong>\u3011\u4EE5\u4E0B\u662F\u6211\u7528 Java \u5199\u7684\u4E00\u6BB5\u6D4B\u8BD5\u7A0B\u5E8F\uFF1A </p><div class="course-code-area"><div class="copy-btn"><div class="copy-icon"></div> \u590D\u5236\u4EE3\u7801 </div><pre><code data-language="java"><ol><li><div class="code-word"><span class="hljs-keyword">package</span> test;
</div></li><li><div class="code-word"><span class="hljs-keyword">import</span> com.github.javafaker.Faker;
</div></li><li><div class="code-word"><span class="hljs-keyword">import</span> org.junit.Test;
</div></li><li><div class="code-word"><span class="hljs-keyword">import</span> javax.crypto.*;
</div></li><li><div class="code-word"><span class="hljs-keyword">import</span> javax.crypto.spec.IvParameterSpec;
</div></li><li><div class="code-word"><span class="hljs-keyword">import</span> java.security.*;
</div></li><li><div class="code-word"><span class="hljs-keyword">import</span> java.security.spec.InvalidKeySpecException;
</div></li><li><div class="code-word"><span class="hljs-keyword">import</span> java.security.spec.PKCS8EncodedKeySpec;
</div></li><li><div class="code-word"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RSA</span> </span>{
</div></li><li><div class="code-word">\xA0 \xA0 <span class="hljs-meta">@Test</span>
</div></li><li><div class="code-word">\xA0 \xA0 <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">rsaEncode</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> NoSuchAlgorithmException, NoSuchPaddingException, InvalidKeySpecException, InvalidKeyException, BadPaddingException, IllegalBlockSizeException </span>{
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 <span class="hljs-keyword">var</span> keyPairGen = KeyPairGenerator.getInstance(<span class="hljs-string">&quot;RSA&quot;</span>);
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 <span class="hljs-keyword">var</span> pair = keyPairGen.generateKeyPair();
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 <span class="hljs-keyword">var</span> privateKey = pair.getPrivate().getEncoded();
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 <span class="hljs-keyword">var</span> faker = <span class="hljs-keyword">new</span> Faker();
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 <span class="hljs-keyword">var</span> start = System.currentTimeMillis();
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 <span class="hljs-keyword">var</span> keyFactory = KeyFactory.getInstance(<span class="hljs-string">&quot;RSA&quot;</span>);
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 <span class="hljs-keyword">var</span> keySpec = <span class="hljs-keyword">new</span> PKCS8EncodedKeySpec(privateKey);
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 <span class="hljs-keyword">var</span> key = keyFactory.generatePrivate(keySpec);
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10000</span>; i++) {
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 \xA0 \xA0 <span class="hljs-keyword">var</span> randomBytes = faker.shakespeare().asYouLikeItQuote().getBytes();
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 \xA0 \xA0 <span class="hljs-keyword">var</span> cipher = Cipher.getInstance(keyFactory.getAlgorithm());
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 \xA0 \xA0 cipher.init(Cipher.ENCRYPT_MODE, key);
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 \xA0 \xA0 <span class="hljs-keyword">var</span> resultBytes = cipher.doFinal(randomBytes);
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 \xA0 \xA0 <span class="hljs-keyword">if</span>(i % <span class="hljs-number">100</span> == <span class="hljs-number">0</span>) {
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 \xA0 System.out.format(<span class="hljs-string">&quot;%d/10000 done.\\n&quot;</span>, i);
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 \xA0 \xA0 }
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 }
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 System.out.format(<span class="hljs-string">&quot;time: %dms\\n&quot;</span>, System.currentTimeMillis() - start);
</div></li><li><div class="code-word">\xA0 \xA0 }
</div></li><li><div class="code-word">\xA0 \xA0 <span class="hljs-meta">@Test</span>
</div></li><li><div class="code-word">\xA0 \xA0 <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">aesEncode</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> NoSuchAlgorithmException, NoSuchPaddingException, InvalidAlgorithmParameterException, InvalidKeyException, BadPaddingException, IllegalBlockSizeException </span>{
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 <span class="hljs-keyword">var</span> keyGenerator = KeyGenerator.getInstance(<span class="hljs-string">&quot;AES&quot;</span>);
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 keyGenerator.init(<span class="hljs-number">128</span>);
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 <span class="hljs-keyword">var</span> key = keyGenerator.generateKey();
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 <span class="hljs-keyword">var</span> faker = <span class="hljs-keyword">new</span> Faker();
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 <span class="hljs-keyword">var</span> ivBytes = <span class="hljs-keyword">new</span> <span class="hljs-keyword">byte</span>[<span class="hljs-number">16</span>];
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 <span class="hljs-keyword">var</span> start = System.currentTimeMillis();
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10000</span>; i++) {
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 \xA0 \xA0 <span class="hljs-keyword">var</span> randomBytes = faker.shakespeare().asYouLikeItQuote().getBytes();
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 \xA0 \xA0 <span class="hljs-keyword">var</span> cipher = Cipher.getInstance(<span class="hljs-string">&quot;AES/CBC/PKCS5Padding&quot;</span>);
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 \xA0 \xA0 <span class="hljs-keyword">new</span> SecureRandom().nextBytes(ivBytes);
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 \xA0 \xA0 <span class="hljs-keyword">var</span> iv = <span class="hljs-keyword">new</span> IvParameterSpec(ivBytes);
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 \xA0 \xA0 cipher.init(Cipher.ENCRYPT_MODE, key, iv);
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 \xA0 \xA0 <span class="hljs-keyword">var</span> result = cipher.doFinal(randomBytes);
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 }
</div></li><li><div class="code-word">\xA0 \xA0 \xA0 \xA0 System.out.format(<span class="hljs-string">&quot;time: %dms\\n&quot;</span>, System.currentTimeMillis() - start);
</div></li><li><div class="code-word">\xA0 \xA0 }
</div></li><li><div class="code-word">}
</div></li></ol></code></pre></div><p data-nodeid="50182"> \u5176\u4E2D\u7528 RSA \u975E\u5BF9\u79F0\u52A0\u5BC6\u7B97\u6CD5\u52A0\u5BC6 10000 \u4E2A\u838E\u58EB\u6BD4\u4E9A\u4E66\u4E2D\u7684\u53E5\u5B50\uFF0C\u7528\u65F6\u5728 11s \u5DE6\u53F3\uFF0C\u800C\u91C7\u7528 AES \u5BF9\u79F0\u52A0\u5BC6\u7B97\u6CD5\u52A0\u5BC6\uFF0C\u7528\u65F6\u5728 400ms \u5DE6\u53F3\u3002 </p><h4 data-nodeid="50183"> 20 | \u4FE1\u4EFB\u94FE\uFF1A\u4E3A\u4EC0\u4E48\u53EF\u4EE5\u76F8\u4FE1\u4E00\u4E2A HTTPS \u7F51\u7AD9\uFF1F </h4><p data-nodeid="50184"> \u3010<strong data-nodeid="50235">\u95EE\u9898</strong>\u3011\u5982\u679C\u516C\u53F8\u8981\u6C42\u4F60\u751F\u6210\u4E00\u4E2A\u516C\u79C1\u94A5\u5BF9\uFF0C\u7136\u540E\u53BB\u8BC1\u4E66\u673A\u6784\u7533\u8BF7\u8BC1\u4E66\uFF0C\u8BF7\u95EE\u5982\u679C\u4F60\u4E22\u5931\u4E86\u8FD9\u4E2A\u516C\u79C1\u94A5\u5BF9\u6709\u4EC0\u4E48\u5371\u5BB3\uFF1F\u4F60\u8981\u5982\u4F55\u4FDD\u62A4\u8FD9\u4E2A\u516C\u79C1\u94A5\u5BF9\uFF1F </p><p data-nodeid="50185"> \u3010<strong data-nodeid="50241">\u89E3\u7B54</strong>\u3011\u5148\u660E\u8BF4\u8BF4\u4E3A\u4EC0\u4E48\u4F1A\u6709\u8FD9\u4E2A\u95EE\u9898\u3002\u7F51\u7AD9\u62E5\u6709\u8005\u5411 CA \u673A\u6784\u7533\u8BF7\u8BC1\u4E66\u65F6\uFF0C\u8BC1\u4E66\u8BF7\u6C42\u6587\u4EF6\u4E2D\u53EA\u5305\u542B\u516C\u94A5\uFF0C\u4E0D\u5305\u542B\u79C1\u94A5\u3002 \u8BC1\u4E66\u79C1\u94A5\u7531\u7F51\u7AD9\u4FDD\u5B58\uFF0C\u8BC1\u4E66\u8BF7\u6C42\u6587\u4EF6\u63D0\u4EA4\u7ED9 CA \u673A\u6784\u8FDB\u884C\u8BA4\u8BC1\u548C\u7B7E\u540D\u540E\u5BF9\u5916\u516C\u5F00\u3002\u800C\u5927\u90E8\u5206\u516C\u53F8\u90FD\u4F1A\u89C4\u5B9A\uFF1A\u542B\u6709\u654F\u611F\u4FE1\u606F\u7684\u6570\u636E\u4E0D\u80FD\u5E26\u51FA\u516C\u53F8\uFF0C\u6BD4\u5982\u53EA\u80FD\u5B58\u653E\u5728\u516C\u53F8\u7684\u7B14\u8BB0\u672C\u3001\u516C\u53F8\u7684\u7F51\u76D8\u3001\u516C\u53F8\u7684\u670D\u52A1\u5668\u4E0A\uFF0C\u4F46\u662F\u663E\u7136\u5BF9\u4E8E\u5B58\u50A8\u8BC1\u4E66\u7684\u573A\u666F\u4E0D\u9002\u7528\u3002\u56E0\u4E3A\u79C1\u94A5\u592A\u654F\u611F\u4E86\uFF0C\u6709\u4E86\u79C1\u94A5\u76F8\u5F53\u4E8E\u53EF\u4EE5\u89E3\u5BC6\u7528\u6237\u53D1\u9001\u7ED9\u670D\u52A1\u5668\u7684\u6570\u636E\uFF0C\u6CC4\u6F0F\u7684\u5371\u5BB3\u6027\u975E\u5E38\u5927\u3002 </p><p data-nodeid="50186"> \u56E0\u6B64\uFF0C\u6B64\u7C7B\u8BC1\u4E66\u6587\u4EF6\u901A\u5E38\u4E0D\u5728\u529E\u516C\u7535\u8111\uFF0C\u6216\u8005\u516C\u53F8\u7F51\u76D8\u4E0A\u5907\u4EFD\u3002\u5982\u679C\u4F60\u81EA\u5DF1\u7684\u7535\u8111\u4E2D\u6709\u5907\u4EFD\uFF0C\u5E94\u8BE5\u5C3D\u5FEB\u5220\u9664\u3002\u901A\u5E38\u8BC1\u4E66\u76F4\u63A5\u4FDD\u5B58\u5230\u5B89\u5168\u7EA7\u522B\u8F83\u9AD8\u7684\u670D\u52A1\u5668\u4E0A\uFF0C\u53EA\u6709\u9700\u8981\u4F7F\u7528\u8BC1\u4E66\u7684\u8F6F\u4EF6\u624D\u80FD\u591F\u8BBF\u95EE\u3002\u53E6\u5916\uFF0C\u5982\u679C\u5916\u90E8\u7684\u7B2C\u4E09\u65B9\u670D\u52A1\u9700\u8981\u7528\u5230\u79C1\u94A5\uFF0C\u6BD4\u5982 CDN\uFF0C\u90A3\u4E48\u8FD9\u91CC\u8FD8\u4F1A\u6D89\u53CA\u4E00\u4E9B\u7279\u522B\u7684\u5BC6\u94A5\u5206\u53D1\u6280\u672F\uFF0C\u4EE5\u53CA\u786C\u4EF6\u52A0\u5BC6\u6280\u672F\uFF0C\u5177\u4F53\u53EF\u4EE5\u53C2\u8003 Keyless SSL \u548C Intel \u7684 QAT \u65B9\u6848\u3002 </p><h4 data-nodeid="50187">21 | \u653B\u9632\u624B\u6BB5\u4ECB\u7ECD\uFF1A\u5982\u4F55\u62B5\u5FA1 SYN \u62D2\u7EDD\u653B\u51FB\uFF1F</h4><p data-nodeid="50188"> \u3010<strong data-nodeid="50249">\u95EE\u9898</strong>\u3011\u54EA\u4E9B\u60C5\u51B5\u4E0B\u4F60\u670D\u52A1\u5668\u7684 /etc/passwd \u6587\u4EF6\u4F1A\u88AB\u9ED1\u5BA2\u62FF\u8D70\uFF1F </p><p data-nodeid="50189"> \u3010<strong data-nodeid="50259">\u89E3\u7B54</strong>\u3011\u6BD4\u8F83\u5E38\u89C1\u7684\u60C5\u5F62\u5C31\u662F<strong data-nodeid="50260">\u5F00\u53D1\u673A\u5668\u4FE1\u606F\u6CC4\u6F0F\u6216\u8005\u4E2D\u6BD2\u6210\u4E86\u8089\u9E21</strong>\u3002\u5F88\u591A\u540C\u5B66\u7684\u5F00\u53D1\u673A\u5668\u4E0A\u90FD\u914D\u7F6E\u4E86\u5230\u670D\u52A1\u5668\u8DF3\u677F\u673A\u7684\u514D\u5BC6\u767B\u5F55\u6743\u9650\u3002\u5982\u679C\u5F00\u53D1\u673A\u5668\u4E0A\u516C\u94A5\u6CC4\u6F0F\uFF0C\u9ED1\u5BA2\u5C31\u6709\u53EF\u80FD\u767B\u5165\u8DF3\u677F\u673A\u3002\u5982\u679C\u6210\u4E86\u8089\u9E21\uFF0C\u90A3\u4E48\u5F88\u591A\u884C\u4E3A\u90FD\u53EF\u4EE5\u8FDC\u7A0B\u64CD\u63A7\uFF0C\u76F8\u5F53\u4E8E\u9ED1\u5BA2\u653B\u7834\u4E86\u4F60\u516C\u53F8\u7684\u5185\u7F51\u3002 </p><p data-nodeid="50190"> \u8FD8\u6709\u4E00\u79CD\u5E38\u89C1\u7684\u60C5\u5F62\u548C\u4EE3\u7801\u6CE8\u5165\u6709\u4E9B\u76F8\u4F3C\u4E4B\u5904\uFF0C\u6BD4\u5982\u8BF4\u6709\u4E00\u4E2A\u83B7\u53D6\u914D\u7F6E\u6587\u4EF6\u7684\u670D\u52A1\uFF0C\u7528\u53C2\u6570\u8868\u793A\u914D\u7F6E\u6587\u4EF6\u7684\u540D\u79F0\uFF0C\u6BD4\u5982 /getfile/a.txt \u4EE3\u8868\u53D6\u51FA\u4EE3\u7801\u8DEF\u5F84\u67D0\u4E2A\u76F8\u5BF9\u76EE\u5F55\u7684 a.txt\u3002\u8FD9\u4E2A\u65F6\u5019\u5982\u679C\u7F51\u7AD9\u7A0B\u5E8F\u5B9E\u73B0\u76F4\u63A5\u5C06\u53C2\u6570\u4F5C\u4E3A\u6587\u4EF6\u8DEF\u5F84\u7684\u4E00\u90E8\u5206\uFF0C\u9ED1\u5BA2\u53EF\u80FD\u4F1A\u5C1D\u8BD5\u4F7F\u7528 /getfile/../../../etc/passwd \u53BB\u83B7\u53D6 /etc/passwd \u6587\u4EF6\u3002 </p><h3 data-nodeid="50191">\u603B\u7ED3</h3><p data-nodeid="50192"> \u7F51\u7EDC\u5B89\u5168\u7C7B\u77E5\u8BC6\u4E0D\u4EC5\u9762\u8BD5\u4E2D\u7ECF\u5E38\u8003\u5BDF\uFF0C\u672C\u8EAB\u4E5F\u5C5E\u4E8E\u975E\u5E38\u5B9E\u7528\u7684\u77E5\u8BC6\u3002\u5728\u5B9E\u9645\u5DE5\u4F5C\u4E2D\uFF0C\u5982\u679C\u89E6\u78B0\u4E86\u9AD8\u5371\u64CD\u4F5C\uFF0C\u5F88\u6709\u53EF\u80FD\u7ED9\u4F60\u4E2A\u4EBA\u6216\u516C\u53F8\u5E26\u6765\u707E\u96BE\u3002\u56E0\u6B64\u5728\u67B6\u6784\u4E00\u4E2A\u7CFB\u7EDF\uFF0C\u6216\u8005\u4E66\u5199\u67B6\u6784\u6587\u6863\u7684\u65F6\u5019\uFF0C\u5EFA\u8BAE\u4F60\u62FF\u51FA\u4E00\u4E2A\u5C0F\u8282\u5177\u4F53\u8BA8\u8BBA\u5B89\u5168\u95EE\u9898\u3002 </p><p data-nodeid="50193"> \u5B66\u5230\u8FD9\u91CC\uFF0C\u300A\u8BA1\u7B97\u673A\u7F51\u7EDC\u901A\u5173 29 \u8BB2\u300B\u4E13\u680F\u7684\u5168\u90E8\u8BFE\u7A0B\u5C31\u7ED3\u675F\u4E86\uFF0C\u7B80\u5355\u603B\u7ED3\u4E00\u4E0B\u3002 </p><ul data-nodeid="50194"><li data-nodeid="50195"><p data-nodeid="50196"> \u7F51\u7EDC\u534F\u8BAE TCP/IP/UDP \u7684\u91CD\u70B9\u662F\u4E86\u89E3\u5176\u4E2D\u7684\u5173\u952E\u539F\u7406\uFF0C\u5E76\u5728\u9047\u5230\u95EE\u9898\u7684\u65F6\u5019\uFF0C\u4F60\u8111\u6D77\u91CC\u80FD\u6709\u5927\u81F4\u7684\u89E3\u51B3\u601D\u8DEF\u548C\u5E94\u5BF9\u65B9\u6848\uFF0C\u6BD4\u5982\u5EFA\u7ACB\u591A\u5C11\u8FDE\u63A5\uFF1F\u8FDE\u63A5\u548C\u7EBF\u7A0B\u662F\u4EC0\u4E48\u6A21\u578B\uFF1F </p></li><li data-nodeid="50197"><p data-nodeid="50198"> Web \u6280\u672F\u662F\u5DE5\u4F5C\u6280\u80FD\uFF0C\u9700\u8981\u4F60\u6839\u636E\u81EA\u5DF1\u7684\u5DE5\u4F5C\u7C7B\u578B\u8BE6\u7EC6\u4E86\u89E3\u5B8C\u6574\u7684\u6280\u672F\u6808\u3002 </p></li><li data-nodeid="50199"><p data-nodeid="50200"> \u7F51\u7EDC\u7F16\u7A0B\u90E8\u5206\u548C\u8BED\u8A00\u8BBE\u8BA1\u3001\u64CD\u4F5C\u7CFB\u7EDF\u7B49\u77E5\u8BC6\u7ED3\u5408\u7D27\u5BC6\uFF0C\u5982\u679C\u4F60\u60F3\u8FDB\u4E00\u6B65\u7406\u89E3 I/O\u3001\u5185\u5B58\u3001\u78C1\u76D8\u7B49\u77E5\u8BC6\uFF0C\u53EF\u4EE5\u5B66\u4E60\u6211\u5728\u62C9\u52FE\u6559\u80B2\u5E73\u53F0\u63A8\u51FA\u7684\u53E6\u4E00\u95E8<a href="https://shenceyun.lagou.com/t/Axo?fileGuid=xxQTRXtVcqtHK6j8" data-nodeid="50270">\u300A\u91CD\u5B66\u64CD\u4F5C\u7CFB\u7EDF\u300B</a>\u4E13\u680F\u3002 </p></li><li data-nodeid="50201"><p data-nodeid="50202"> \u6700\u540E\uFF0C\u7F51\u7EDC\u5B89\u5168\u662F\u9AD8\u538B\u7EBF\uFF0C\u5DE5\u4F5C\u4E2D\u4E0D\u5BB9\u5FFD\u89C6\uFF0C\u9700\u8981\u4F60\u52A0\u500D\u5C0F\u5FC3\uFF0C\u8C28\u614E\u5904\u7406\u3002\u8FD9\u91CC\u6211\u5631\u5490\u4F60\u4E24\u4EF6\u4E8B\u60C5\uFF1A\u7B2C\u4E00\uFF0C\u6280\u672F\u5C97\u4F4D\u5176\u5B9E\u5F88\u5BB9\u6613\u8FDD\u6CD5\uFF0C\u8FDD\u6CD5\u884C\u4E3A\u575A\u51B3\u4E0D\u8981\u505A\uFF1B\u7B2C\u4E8C\uFF0C\u4E0A\u7EBF\u524D\u8981\u8FDB\u884C\u5B89\u5168\u626B\u63CF\uFF0C\u517B\u6210\u4E60\u60EF\u3002 </p></li></ul><p data-nodeid="50203"> \u8FD9\u4E00\u8BB2\u5C31\u5230\u8FD9\u91CC\uFF0C\u53D1\u73B0\u6C42\u77E5\u7684\u4E50\u8DA3\uFF0C\u6211\u662F\u6797\u4B7D\u3002\u611F\u8C22\u4F60\u5B66\u4E60\u672C\u6B21\u8BFE\u7A0B\uFF0C\u4E0B\u4E00\u8BB2\u662F\u672C\u4E13\u680F\u7684\u6700\u540E\u4E00\u7BC7\u5185\u5BB9\uFF0C\u6211\u60F3\u548C\u4F60\u804A\u804A\u300A\u672A\u6765\u9700\u8981\u600E\u6837\u7684\u5DE5\u7A0B\u5E08\u300B\uFF0C\u518D\u89C1\u3002 </p></div></div>`,1),v=[t,r,c,p];function h(w,y){return a(),d("div",o,v)}var j=l(n,[["render",h]]);export{j as default};
